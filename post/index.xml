<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on 姜振园的博客</title>
        <link>https://www.jzy-blogs.cn/post/</link>
        <description>Recent content in Posts on 姜振园的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>姜振园</copyright>
        <lastBuildDate>Sat, 15 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.jzy-blogs.cn/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Jmeter-定时器</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
        <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-定时器" /&gt;&lt;h1 id=&#34;定时器timer&#34;&gt;&lt;em&gt;定时器(Timer)&lt;/em&gt;
&lt;/h1&gt;&lt;blockquote&gt;
    &lt;p&gt;&lt;p&gt;JMeter中的定时器（Timer）是一种配置元件，它在测试计划中的各个请求（Sampler）之间添加延迟或等待时间。可以模拟用户在操作过程中的自然停顿，以及控制请求的发送频率。以下是JMeter中几种常用的定时器类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;固定定时器(Constant Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;统一随机定时器(Uniform Random Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;常数吞吐量定时器(Constant Throughput Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;准确的吞吐量定时器(Precise Throughput Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;暂不讲&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JSR223定时器(JSR223 Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;同步定时器(Synchronizing Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;泊松随机定时器(Poisson Random Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;高斯随机定时器(Gaussian Random Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BeanShall定时器(BeanShell Timer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;br&gt;
&lt;h2 id=&#34;part1固定定时器&#34;&gt;&lt;em&gt;Part1.固定定时器&lt;/em&gt;
&lt;/h2&gt;&lt;blockquote&gt;
    &lt;p&gt;它的作用是添加固定的时间间隔。可添加在&lt;code&gt;测试计划、线程组、取样器&lt;/code&gt;下，使其延迟执行。时间单位为毫秒。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;测试计划下添加固定定时器，设置延迟为&lt;code&gt;3000&lt;/code&gt;。它会造成测试计划下所有的请求以延迟&lt;code&gt;3秒&lt;/code&gt;的时间执行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/1.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中，测试计划中勾选了&lt;code&gt;独立运行每个线程组&lt;/code&gt;，所以6个请求顺序执行。固定定时器的作用域是整个测试计划。可以看出每个请求执行前都会延迟&lt;code&gt;3秒&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;线程组下添加固定定时器，设置延迟为&lt;code&gt;3000&lt;/code&gt;。它会造成该线程组下所有的请求以延迟&lt;code&gt;3秒&lt;/code&gt;的时间执行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/2.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;3个请求顺序执行。固定定时器的作用域是整个线程组。可以看出每个请求执行前都会延迟&lt;code&gt;3秒&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取样器下添加固定定时器，设置延迟为&lt;code&gt;3000&lt;/code&gt;。它会造成该取样器延迟&lt;code&gt;3秒&lt;/code&gt;执行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/3.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;3个请求顺序执行。固定定时器的作用域是&lt;code&gt;HTTP请求-1-3&lt;/code&gt;。可以看出只有&lt;code&gt;HTTP请求-1-3&lt;/code&gt;执行前延迟&lt;code&gt;3秒&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2统一随机定时器&#34;&gt;&lt;em&gt;Part2.统一随机定时器&lt;/em&gt;
&lt;/h2&gt;&lt;blockquote&gt;
    &lt;p&gt;它的作用是添加一个&lt;code&gt;随机的时间间隔+一个固定的时间间隔&lt;/code&gt;。随机的时间间隔在用户&lt;code&gt;0-值&lt;/code&gt;之间随机获取，固定的时间间隔可以看作最小时间，时间单位为毫秒。&lt;code&gt;总的延时 = 固定延迟时间 + 随机生成的延时&lt;/code&gt;。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;统一随机定时器中配置&lt;code&gt;Random Delay Maximum(随机延迟):3000&lt;/code&gt;&amp;amp;&amp;amp;&lt;code&gt;Constant Delay Offset(固定延迟):3000&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/4.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;3个请求顺序执行，执行了2次。&lt;code&gt;HTTP请求-1-2&lt;/code&gt;两次执行前延迟不一致，第一次是&lt;code&gt;3秒&lt;/code&gt;，第二次是&lt;code&gt;4秒&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3同步定时器&#34;&gt;&lt;em&gt;Part3.同步定时器&lt;/em&gt;
&lt;/h2&gt;&lt;blockquote&gt;
    &lt;p&gt;&lt;p&gt;它的作用是保证取样器在同一时刻向服务器发起负载测试。可以设置&lt;code&gt;模拟用户组的数量、超出时间&lt;/code&gt;，对并发量及等待时间进行控制。&lt;/p&gt;
&lt;p&gt;同步定时器一般在线程达到&lt;code&gt;模拟用户组的数量&lt;/code&gt;时，同步释放。如果线程未达到&lt;code&gt;模拟用户组的数量&lt;/code&gt;，它就会一致等待，此时就可以配置&lt;code&gt;超出时间&lt;/code&gt;，等待一段时间后，将线程同步释放。&lt;/p&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;线程组的线程数配置为&lt;code&gt;100&lt;/code&gt;,未配置同步定时器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/5.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;可以看出第1个线程请求与第100个线程请求的执行时间相差&lt;code&gt;1秒&lt;/code&gt;左右。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;线程组的线程数配置为&lt;code&gt;100&lt;/code&gt;,配置同步定时器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/6.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;可以看出第1个线程请求与第100个线程请求的执行时间只相差&lt;code&gt;几毫秒&lt;/code&gt;左右。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;超出时间。配置线程组的线程数配置为&lt;code&gt;10&lt;/code&gt;，同步定时器的模拟用户组数量为&lt;code&gt;9&lt;/code&gt;、超出时间为&lt;code&gt;3000&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/7.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;10个线程，同步定时器在线程数达到&lt;code&gt;9(模拟用户组数量)&lt;/code&gt;时，释放这&lt;code&gt;9个请求&lt;/code&gt;。剩下的1个，由于达不到&lt;code&gt;9个线程(模拟用户组数量)&lt;/code&gt;的要求，只能延迟&lt;code&gt;3秒(超出时间)&lt;/code&gt;释放。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3常数吞吐量定时器&#34;&gt;&lt;em&gt;Part3.常数吞吐量定时器&lt;/em&gt;
&lt;/h2&gt;&lt;blockquote&gt;
    &lt;p&gt;&lt;p&gt;此计时器引入了可变暂停，经过计算以使总吞吐量（以每分钟样本数计算）尽可能接近给定数字。当然，如果服务器无法处理，或者其他计时器或耗时的测试元素阻止了吞吐量，则吞吐量会更低。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;常数吞吐量定时器&lt;/code&gt;参数说明&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;姓名：描述性名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目标吞吐量（每分钟的样本量）：单位分钟。比如样本量3000，则吞吐量为500/sec。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于计算吞吐量：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;只有此线程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目标吞吐量：3000样本/分钟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线程数：5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果：每个线程将独立尝试保持3000样本/分钟，总吞吐量 = 3000 * 5 = 15000样本/分钟。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有活动线程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目标吞吐量：3000样本/分钟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线程组数：3，每组10个线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果：所有30个线程将共同实现3000样本/分钟的吞吐量，每个线程的吞吐量将基于它上次运行的时间，根据需要延迟调整。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：每个线程组都需要一个具有相同设置的常数吞吐量定时器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有活动线程（共享）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目标吞吐量：3000样本/分钟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线程组数：3，每组10个线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果：所有30个线程将共同实现3000样本/分钟的吞吐量，每个线程的吞吐量将根据任何线程上次运行的时间而延迟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：每个线程组都需要一个具有相同设置的常数吞吐量定时器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当前线程组中的所有活动线程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目标吞吐量：3000样本/分钟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当前线程组：10个线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果：这10个线程将共同实现3000样本/分钟的吞吐量，分配吞吐量并根据每个线程上次运行的时间进行延迟调整。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当前线程组中的所有活动线程（共享）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目标吞吐量：3000样本/分钟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当前线程组：10个线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果：这10个线程将共同实现3000样本/分钟的吞吐量，分配吞吐量并根据当前线程组中任何线程上次运行的时间进行延迟调整。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;配置示例Jmeter脚本&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;测试计划下添加聚合报告、常数吞吐定时器、线程组&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程组下添加20个相同的HTTP请求取样器&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程组的线程数配置为：&lt;code&gt;1000&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTTP请求取样器配置请求地址为：&lt;code&gt;HTTP://127.0.0.1:5000/api/GetList/&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTTP请求取样器配置请求方式为：&lt;code&gt;GET&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;常数吞吐定时器的基于计算吞吐量配置为：&lt;code&gt;此线程&lt;/code&gt;、目标吞吐量配置为：&lt;code&gt;60&lt;/code&gt;(1/sec)，线程组的线程数修改配置为：&lt;code&gt;100&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/8.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;只有此线程&lt;/code&gt;，总的吞吐量=基于吞吐量×线程数。则此次测试的总吞吐量为1×100=100/sec。与图中几乎一致。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;常数吞吐定时器的基于计算吞吐量配置为：&lt;code&gt;当前线程组中的所有活动线程&lt;/code&gt;、目标吞吐量配置为：&lt;code&gt;600&lt;/code&gt;(10/sec)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/9.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;当前线程组中的所有活动线程&lt;/code&gt;，总的吞吐量=基于吞吐量。则此次测试的总吞吐量为1×100=100/sec。图中为10.5/sec，好像与图中几乎一致。&lt;/p&gt;
&lt;p&gt;但是请注意，其中是有问题的。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/10.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;用表格查看结果&lt;/code&gt;表示。好家伙！在48分28秒时，竟然偷偷完成了72个请求的吞吐。在48分29秒时，偷偷完成了43个请求的吞吐。&lt;/p&gt;
&lt;p&gt;后续的吞吐量貌似正常了，其实有很多时间每秒只有&lt;code&gt;7/sec、8/sec或9/sec&lt;/code&gt;的吞吐量来补偿前面的&lt;code&gt;72/sec、43/sec&lt;/code&gt;。可恶啊！可恶。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;用表格查看结果&lt;/code&gt;温馨提示，请谨慎使用&lt;code&gt;当前线程组中的所有活动线程&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;常数吞吐定时器的基于计算吞吐量配置为：&lt;code&gt;当前线程组中的所有活动线程（共享）&lt;/code&gt;、目标吞吐量配置为：&lt;code&gt;600&lt;/code&gt;(10/sec)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/11.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;嗯！很完美的&lt;code&gt;10/sec&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但有上面的问题吗？&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Timer/12.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;用表格查看结果&lt;/code&gt;表示。呵！一丘之貉。只不过有比&lt;code&gt;当前线程组中的所有活动线程&lt;/code&gt;更快、更激烈的补偿，使之不符合目标吞吐量的时间较之大大缩短。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;常数吞吐定时器的基于计算吞吐量配置为：&lt;code&gt;所有活动线程&lt;/code&gt;与&lt;code&gt;所有活动线程（共享）用于多线程组&lt;/code&gt;。也有着&lt;code&gt;当前线程组中的所有活动线程&lt;/code&gt;的问题，就不贴上来了。&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;未完待续&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Jmeter-监听器</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E7%9B%91%E5%90%AC%E5%99%A8/</link>
        <pubDate>Fri, 14 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E7%9B%91%E5%90%AC%E5%99%A8/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-监听器" /&gt;&lt;h1 id=&#34;监听器&#34;&gt;&lt;em&gt;监听器&lt;/em&gt;
&lt;/h1&gt;&lt;p&gt;在JMeter中，监听器（Listeners）是用来收集和展示采样器（Samplers）产生的结果数据的元件。它们可以显示测试过程中的响应时间、吞吐量、错误率等信息。JMeter监听器包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查看结果树(View Results Tree)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;汇总报告(Summary Report)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;聚合报告(Aggregate Report)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;后端监听器(Backend Listener)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JSR223 监听器(JSR223 Listener)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;保存响应到文件(Save Responses to a file)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;响应时间图(Response Time Graph)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;图形结果(Graph Results）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个可以不用了解，消耗资源多且生成的图表质量不高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;断言结果(Assertion Results)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;比较断言可视化器(Comparison Assertion Visualizer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;汇总图(Aggregate Graph)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;生成概要结果(Generate Summary Results)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用表格查看结果(View Results in Table)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;简单数据写入器(Simple Data Writer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;邮件观察仪(Mailer Visualizer)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BeanShell 监听器(BeanShell Listener)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;part1查看结果树&#34;&gt;&lt;em&gt;Part1.查看结果树&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;查看结果树显示请求的&lt;code&gt;取样器结果、请求信息、响应信息&lt;/code&gt;。我们可以通过查看结果树中的内容，检查脚本是否有问题。比如IP、端口或者请求数据。还可以检查，响应数据是否正常。常用于接口测试及验证脚本。&lt;/p&gt;
&lt;p&gt;在进行性能测试时，它在过程中会消耗大量资源，尽量不要使用查看结果树。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结果列表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/1.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;绿色代表请求成功，红色代表请求失败(断言未通过也算失败)。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;取样器结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/2.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Thread Name&lt;/strong&gt;: 执行请求的线程名称，这里是&amp;quot;线程组 1-1&amp;quot;，表示这是属于线程组1的第1个线程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sample Start&lt;/strong&gt;: 请求开始的时间，格式为年-月-日 时:分:秒，这里是&amp;quot;2024-06-14 16:17:12 CST&amp;quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Load time&lt;/strong&gt;: 请求的加载时间，包括建立连接、发送请求、接收响应的总时间，这里是2毫秒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Connect Time&lt;/strong&gt;: 建立到服务器的连接所需的时间，这里是1毫秒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt;: 服务器延迟时间，即从发送请求到接收到第一个字节响应的时间，这里是2毫秒。注意这里的延迟时间与连接时间相等，可能是因为这个值已经包含了连接时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Size in bytes&lt;/strong&gt;: 响应的总字节数，这里是192字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sent bytes&lt;/strong&gt;: 发送到服务器的请求的字节数，这里是265字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Headers size in bytes&lt;/strong&gt;: 响应头的大小，这里是173字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Body size in bytes&lt;/strong&gt;: 响应体的大小，这里是19字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sample Count&lt;/strong&gt;: 在这个监听器中捕获的样本数量，这里是1。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Error Count&lt;/strong&gt;: 遇到的错误数量，这里是0，表示请求成功。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data type&lt;/strong&gt;: 响应数据的类型，这里标记为&amp;quot;text&amp;quot;，表示响应是文本类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Response code&lt;/strong&gt;: HTTP响应状态码，200表示请求成功。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Response message&lt;/strong&gt;: HTTP响应消息，&amp;ldquo;OK&amp;quot;表示请求被成功处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTTPSampleResult fields&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ContentType&lt;/strong&gt;: 响应的MIME类型和字符编码，这里是&amp;quot;text/html; charset=utf-8&amp;rdquo;，表示响应是HTML文本，使用UTF-8编码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DataEncoding&lt;/strong&gt;: 响应数据的编码，这里也是&amp;quot;utf-8&amp;quot;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;请求数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/3.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Connection&lt;/strong&gt;:  表示客户端希与服务器的连接方式，这里是长连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Content-Length&lt;/strong&gt;: 表示请求体的长度是15个字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Content-Type&lt;/strong&gt;:  表示请求体的类型是application/x-www-form-urlencoded，并且使用UTF-8字符编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Host&lt;/strong&gt;:  指定了请求的目标服务器地址和端口号，这里是本地主机的5000端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;User-Agent&lt;/strong&gt;:  表示发送请求的客户端软件和版本，这里是Apache HttpClient库，运行在Java环境中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;POST http://127.0.0.1:5000/api/QuickUse/&lt;/strong&gt;: 表示请求方式、URL(包括协议、主机、端口和请求的路径)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;POST data&lt;/strong&gt;:显示请求体中的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[no cookies]&lt;/strong&gt;: 这表示请求中没有携带任何Cookie。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;响应数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/4.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTTP/1.1 200 OK&lt;/strong&gt;: 这表示使用的是HTTP协议版本1.1，并且请求成功，状态码200表示服务器成功处理了请求并返回了所请求的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;: 这里表明服务器使用的是Werkzeug服务器软件，版本为3.0.1，运行在Python环境下，Python的版本为3.12.3。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt;: 表示响应的日期和时间，使用GMT（格林尼治标准时间）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Content-Type&lt;/strong&gt;: 这里表示响应的内容类型是HTML，字符编码是UTF-8。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Content-Length&lt;/strong&gt;:  表示响应体的字节长度是19字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Connection&lt;/strong&gt;: close 表示服务器在发送完响应后将关闭连接。这与 Connection: keep-alive 相反，后者表示连接可以保持开启状态以用于发送多个请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;请求方式非 GET&lt;/strong&gt;: 这就是响应体数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;所有数据写入一个文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建议不要保存文件到C盘，除非以管理员身份运行Jmeter。另外还可以配置日志内容，就请读者自己探究吧。&lt;/p&gt;
&lt;p&gt;这个功能有连个作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置运行结果保存到那个文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过浏览-打开文件，可以读取文件的数据，在对应的监听器中显示数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;监听器的 所有数据写入一个文件，都是同种作用。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;查找&amp;amp;&amp;amp;结果显示方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/5.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;可以通过查找快速定位请求，支持正则表达式。查找的结果用红色框包裹。&lt;/p&gt;
&lt;p&gt;我自己标记的绿色框，可以选择结果显示方式。还是请读者自己去探究吧。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2汇总报告&#34;&gt;&lt;em&gt;Part2.汇总报告&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;可以查看事务或者取样器在某个时间范围内执行的汇总结果，一个取样器或事务占一行。数据包括样本(请求量)、平均值、最小值、最大值、标准偏差、异常%(错误请求)、吞吐量、接受KB/sec、发送KB/sec、平均字节数。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/6.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lable：f&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;样本（Samples）：取样器请求的数量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均值（Average）：请求（事务）的平均响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最小值（Min）：请求的最小响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最大值（Max）：请求的最大响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标准偏差（Std.Dev）： 响应时间的标准方差&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;异常 %（Error）：请求的错误率 = 错误请求的数量/请求的总数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吞吐量（Throughput）：默认情况下表示每秒完成的请求数，一般认为它为TPS。（注意单位的变化，如上图中，当TPS很低时，jmeter中默认会统计成每分钟的值，这时我们需要换算成以秒为单位）。当使用了 Transaction Controller 时，也可以表示类似 LoadRunner 的 Transaction per Second 数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收 KB/sec（Received KB/sec）：每秒接收的千字节数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发送 KB/sec（Sent KB/sec）：每秒发送的千字节数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均字节数（Avg.Bytes）：取样结果返回的平均大小&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还可以保存数据到文件及保存表格数据。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3聚合报告&#34;&gt;&lt;em&gt;Part3.聚合报告&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;聚合报告与汇总报告类似，较于汇总报告更占用主机资源。数据包括样本(请求量)、平均值、中位数、90%百分位、95%百分位、99%百分位、最小值、最大值、异常%(错误请求)、吞吐量、接受KB/sec、发送KB/sec。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/7.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Label：Label：每个请求的名称。每个 JMeter 的 element(例如 HTTP Request)都有一个 Name 属性，这里显示的就是 Name 属性的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;样本（Samples）：各请求发出的数量。表示你这次测试中一共发出了多少个请求，如果模拟10个用户，每个用户迭代10次，那么这里显示100&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均值（Average：平均响应时间（单位：毫秒）。默认是单个Request的平均响应时间，当使用了Transaction Controller时，也可以以Transaction为单位显示平均响应时间。值 = 总运行时间 / 发送到服务器的总请求数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中位数（Median）：50%用户的响应时间在小于该值，注意它与average平均响应时间的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;90%百分位：90%用户的响应时间小于该值，90%line是性能测试中比较重要的一个衡量指标。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;95%百分位：95%用户的响应时间小于该值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;99%百分位：99%用户的响应时间小于该值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最小值（Min）：请求的最小响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最大值（Max）：请求的最大响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;异常 %（Error）：请求的错误率 = 错误请求的数量/请求的总数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吞吐量（Throughput）：默认情况下表示每秒完成的请求数，一般认为它为TPS。（注意单位的变化，如上图中，当TPS很低时，jmeter中默认会统计成每分钟的值，这时我们需要换算成以秒为单位）。当使用了 Transaction Controller 时，也可以表示类似 LoadRunner 的 Transaction per Second 数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收 KB/sec（Received KB/sec）：每秒接收的千字节数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发送 KB/sec（Sent KB/sec）：每秒发送的千字节数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还可以保存数据到文件及保存表格数据。另外可以访问&lt;a class=&#34;link&#34; href=&#34;https://wiki.mbalib.com/wiki/%E7%99%BE%E5%88%86%E4%BD%8D%E6%95%B0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;百分位数&lt;/a&gt;了解概念。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part4后端监听器&#34;&gt;&lt;em&gt;Part4.后端监听器&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;在Apache JMeter中，后端监听器（Backend Listener）是用于将测试结果实时发送到外部数据存储或监控系统的一种组件。它常用于将性能测试结果发送到外部系统，如Grafana、InfluxDB、ElasticSearch等数据库，以便实时监控和分析性能测试的结果。&lt;/p&gt;
&lt;p&gt;在“后端监听器”组件中，选择“Backend Listener Implementation”（后端监听器实现）类型。常见的实现有：
org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient：发送数据到InfluxDB。
org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient：发送数据到Graphite。&lt;/p&gt;
&lt;p&gt;根据选择的实现类型，填写相应的配置信息，如数据库URL、用户名、密码等。&lt;/p&gt;
&lt;p&gt;比如配置InfluxDB后端监听器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;选择InfluxdbBackendListenerClient作为实现类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;influxdbMetricsSender: 默认值就行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;influxdbUrl: InfluxDB的URL，例如http://localhost:8086/write?db=jmeter。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;application: 应用名称，用于区分不同的应用或测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;measurement: 数据表名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;summaryOnly: 是否只发送汇总数据，默认false。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;samplersRegex: 正则表达式，用于匹配要发送的采样器名称，默认是“.*”表示所有采样器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;percentiles: 需要记录的百分位数，默认是90,95,99。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动InfluxDB和Grafana（如果使用这些工具）：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确保InfluxDB和Grafana已启动并配置正确。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在InfluxDB中创建一个数据库，用于存储JMeter发送的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在Grafana中配置一个数据源，指向InfluxDB数据库，并创建仪表盘用于展示数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行JMeter测试：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动JMeter测试计划。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在Grafana或其他监控工具中查看实时性能测试结果，分析系统的性能表现。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/8.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以访问&lt;a class=&#34;link&#34; href=&#34;https://github.com/rahulsinghai/jmeter-backend-listener-kafka&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github开源JMeter后端监听器&lt;/a&gt;了解并使用更多方便、强大的后端监听器方案。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part5jsr223-监听器&#34;&gt;&lt;em&gt;Part5.JSR223 监听器&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;它允许用户通过自定义脚本来处理采样器的结果数据，使用的主要目的是数据存储、实时监控和报警。JSR223监听器支持多种脚本语言，如Groovy、JavaScript、BeanShell等，提供了很大的灵活性来执行复杂的数据处理和结果分析任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;选择脚本语言&lt;code&gt;Groovy&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在“脚本”区域中，编写脚本代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Groovy&#34; data-lang=&#34;Groovy&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.jmeter.samplers.SampleResult&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.nio.file.Files&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.nio.file.Paths&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.nio.file.StandardOpenOption&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 获取当前采样器的结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SampleResult&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sampleResult&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 获取采样器名称
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;samplerName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sampleResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSampleLabel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 获取响应时间
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;responseTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sampleResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 获取响应数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;responseData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sampleResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResponseDataAsString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 获取响应状态
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;success&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sampleResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isSuccessful&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 构造日志信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logMessage&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Sampler: ${samplerName}, Response Time: ${responseTime}ms, Success: ${success}, Response Data: ${responseData}\n&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 定义日志文件路径
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logFilePath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;D:\logfile.log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 将日志信息写入文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Files&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Paths&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logFilePath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logMessage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StandardOpenOption&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StandardOpenOption&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;APPEND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;输出的logfile.log文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/9.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;当然你也可以在脚本中将结果数据传递到数据库或其他服务系统进行处理，或者直接进行处理。不过这会消耗主机资源，需要做好取舍。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;自定义参数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以通过&lt;code&gt;参数&lt;/code&gt;，其他元件（比如用户定义的变量、Jmeter-CSV Data Set Config、函数等）传递数据给脚本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;参数&lt;/code&gt;中输入&lt;code&gt;jiang 1&lt;/code&gt;（空格分割，值可以是列表、元组等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加用户定义的变量&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/10.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改上述脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Groovy&#34; data-lang=&#34;Groovy&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 新增获取自定义参数，自定义参数会保存到args变量(列表)，
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 构造日志信息,新增name，number, class, random。random是随机函数。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logMessage&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Sampler: ${samplerName}, Response Time: ${responseTime}ms, Success: ${success}, Response Data: ${responseData}, name: ${name}, number: ${number}, class: ${class}, random: ${__Random(111111,222222,)}\n&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;输出的logfile.log文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/11.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;name，number, class, random&lt;/code&gt;的值都被输出到logfile.log文件中了。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;脚本文件（覆盖脚本）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;符合字面意思，引用脚本文件会覆盖脚本内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;把示例脚本内容添加到空白的test.groovy文件中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引用test.groovy`&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除logfile.log文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;输出的logfile.log文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/12.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;name，number, class, random&lt;/code&gt;的值不再输出，因为执行的是test.groovy脚本。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;你也可以通过脚本实现阈值功能，比如错误率达到一定值时，自动停止测试。不过在这里我就不再过多阐述，读者可以自己探究。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part6保存响应到文件&#34;&gt;&lt;em&gt;Part6.保存响应到文件&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;当结果太大，使用结果树监听器影响图形模式时，我们可以采用响应保存监听器来处理，可以将结果树数据保存到文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Save Successful Responses only：仅保存成功响应&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save Failed Responses only：仅保存失败响应&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t save Transaction Controller SampleResult：不保存事务控制器样本结果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件前缀：文件路径 + 文件前缀&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t add number to prefix：不添加数字到文件前缀&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t add content type suffix：不添加文件的后缀类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add timestamp：添加时间戳到文件前缀&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Minimum Length of sequence number：设置文件名称最小的序列号；例如4，文件序号为0001…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例Jmeter&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件前缀：&lt;code&gt;D:\Results\Results1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线程组线程数：&lt;code&gt;200&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000//api/GetList/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;运行后结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/13.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;一个请求结果独立一个文件。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part7响应时间图&#34;&gt;&lt;em&gt;Part7.响应时间图&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;响应时间图是一个直方图，其中 X 轴表示时间，Y 轴表示响应时间。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/14.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;响应时间：就是一个请求从发送到接收到响应的总时间。在图中，每个数据点的Y坐标表示请求响应时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时间：测试计划运行的持续时间。在图中，每个数据点的X坐标表示请求开始的时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分布：数据点在图中的分布，可以分析出响应时间的变化。如果数据点在一条线附近，那么响应时间可能比较稳定。如果数据点在图中的分布比较广，那么响应时间可能有比较大的波动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;趋势：我们也可以通过响应时间图来观察响应时间的趋势。例如，如果数据点从左至右逐渐上升，那么可能表明随着时间的推移，响应时间在增加。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;其余参数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;时间间隔&lt;/code&gt;关系X轴的显示。其它参数都是改变显示方式，如字体。读者可自行探究。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part8断言结果&#34;&gt;&lt;em&gt;Part8.断言结果&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;文本显示所有请求名称，如果断言失败，名称下方显示失败原因，成功则不显示。消耗资源较多，且我认为意义不大。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/15.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part9比较断言可视化器&#34;&gt;&lt;em&gt;Part9.比较断言可视化器&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;显示请求断言情况，若断言失败，标红。但无法给出断言信息。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/16.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part10汇总图&#34;&gt;&lt;em&gt;Part10.汇总图&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;较于汇总报告，多了柱形图功能。列可显示&lt;code&gt;平均值、中位数、90%百分位、95%百分位、99%百分位、最小值、最大值&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/17.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part11生成概要结果&#34;&gt;&lt;em&gt;Part11.生成概要结果&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;生成概要结果&lt;/code&gt;没有配置参数。生成结果需要在Jmeter日志或者Jmeter-cmd窗口查看。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/18.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/19.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;in：TPS，每秒取样器执行的数量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avg：平均值。平均响应时间，所有请求的平均响应时间，单位是毫秒&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Min：最小值。请求的最小响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Max：最大值。请求的最大响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Err：异常百分比。（错误请求的数量/请求的总数)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;part12用表格查看结果&#34;&gt;&lt;em&gt;Part12.用表格查看结果&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;与&lt;code&gt;查看结果树&lt;/code&gt;不同，此元件将结果写进表格中，可查看数据也不同。不过都能查看各个请求结果状态。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/20.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sample#：请求序号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start Time：请求开始时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Thread Name：线程名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Label：请求的名称（实际请求中可使用参数化对每个请求做区分）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sample Time(ms)：请求的响应时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Status：请求状态，为勾则表示成功，为叉表示失败&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bytes：响应的字节数及请求的字节数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sent Bytes：发送的字节数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Latency：延迟时间（单位：毫秒）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect Time(ms)：连接服务器的时间。（单位：毫秒）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;样本数目：所有的请求个数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均：所有请求的平均响应时间。（单位：毫秒）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最新样本：最新样本响应时间，表示服务器响应最后一个请求的时间。（单位：毫秒）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;偏离：不知道怎么算的，不发表意见。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;part13简单数据写入器&#34;&gt;&lt;em&gt;Part13.简单数据写入器&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;使用该元件，需要在&lt;code&gt;所有数据写入一个文件&lt;/code&gt;配置文件路径(建议保存到D盘)。运行后，数据就会保存到文件中。然后可以使用&lt;code&gt;查看结果树、聚合报告、图形结果等&lt;/code&gt;查看数据。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/21.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part14邮件观察仪&#34;&gt;&lt;em&gt;Part14.邮件观察仪&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;主要是做提示用。可以自定义请求成功或失败的次数阈值，触发后就会自动发送邮件。&lt;/p&gt;
&lt;p&gt;需要配置发送人、收件人以及SMTP server。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/22.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;From：发件人邮箱&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Addressee(s)：收件人邮箱&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Success Subject：成功的请求数达到阈值后，要发送的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Failure Subject：失败的请求数达到阈值后，要发送的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Success Limit：成功的请求数阈值。如果不想发送，可以将值设未极大，如10000000&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Failure Limit：失败的请求数阈值。如果不想发送，可以将值设未极大，如10000000&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Host：SMTP服务器的域名或IP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Port：SMTP服务器的端口号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login：发件人邮箱账号，一般为发件人邮箱&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Password：发件人的授权密码&lt;/p&gt;
&lt;p&gt;163邮箱为例，在设置中获取：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/23.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commection security：连接协议。一般都是SSl，以SMTP服务器指定协议为准。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;收件人收到的邮件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Listener/24.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part15beanshell-监听器&#34;&gt;&lt;em&gt;Part15.BeanShell 监听器&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;BeanShell 监听器&lt;/code&gt;类似&lt;code&gt;JSR223 监听器&lt;/code&gt;。只不过&lt;code&gt;BeanShell 监听器&lt;/code&gt;只可以使用BeanShell语言。&lt;/p&gt;
&lt;p&gt;如果会使用&lt;code&gt;JSR223 监听器&lt;/code&gt;，那么&lt;code&gt;BeanShell 监听器&lt;/code&gt;也没问题。本质上都是编写脚本。&lt;/p&gt;
&lt;h2 id=&#34;part15最后要说的话&#34;&gt;&lt;em&gt;Part15.最后要说的话&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;其实最常用的监听器就是&lt;code&gt;查看结果树、聚合报告、JSR223 监听器&lt;/code&gt;，其他监听器特定情况也会用就是了。&lt;/p&gt;
&lt;p&gt;本篇总结了Jmeter中所有的监听器，希望能够供读者们借鉴。也期待大家踊跃发言。&lt;/p&gt;
&lt;p&gt;笔就横在这里吧。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>记一次性能测试</title>
        <link>https://www.jzy-blogs.cn/p/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
        <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Other/Performance/0.png" alt="Featured image of post 记一次性能测试" /&gt;&lt;h2 id=&#34;part1背景&#34;&gt;Part1.背景
&lt;/h2&gt;&lt;p&gt;我负责的一个项目经过长时间的开发，终于在客户现场正式运行了。虽然在正式运行前很长一段时间里我一直计划进行一次性能测试，但由于各种原因，测试一直没有进行。我们的运维人员在正式运行前进行了试运行，结果在一定数量的并发下，由于硬盘顶不住，系统直接卡死了。好吧！&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2影响项目性能的因素分析&#34;&gt;Part2.影响项目性能的因素分析
&lt;/h2&gt;&lt;p&gt;我负责的这个项目的主要功能就是对监控设备的视频流进行切片、存储，然后生成URL供平台调阅。它主要分为两个部分，&lt;code&gt;切片、存储&lt;/code&gt;。这个项目中，不同存储方式导致项目架构不同。&lt;/p&gt;
&lt;p&gt;存储方面，提供3中存储方式——&lt;code&gt;本地存储、S3接口存储、智能云存储&lt;/code&gt;。&lt;code&gt;S3接口存储、智能云存储&lt;/code&gt;需额外配置存储服务器，与切片服务器分开，切片视频文件放在存储服务器中。&lt;code&gt;本地存储&lt;/code&gt;则不需额外配置存储服务器，直接把切片视频文件放在切片服务器中。&lt;/p&gt;
&lt;p&gt;进行性能测试，首先要知道影响项目性能的因素有那些。与研发沟通后。切片时需关注&lt;code&gt;cpu使用率、平均负载、内存使用&lt;/code&gt;。存储时需关注存储&lt;code&gt;cpu使用率、内存使用率、平均负载、系统读写带宽信息、硬盘读写带宽信息&lt;/code&gt;。非&lt;code&gt;本地存储&lt;/code&gt;时，还需要获取切片服务器与存储服务器之间的&lt;code&gt;网络宽带信息&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3策划初步测试方案&#34;&gt;Part3.策划初步测试方案
&lt;/h2&gt;&lt;p&gt;首先需要明确，此项目主要功能的流程。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/Performance/1.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;由此可以初步策划两套测试方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第一套&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;Jmeter&lt;/code&gt;下发切片指令，切片服务器中使用&lt;code&gt;top命令&lt;/code&gt;获取切片服务器切片过程中的&lt;code&gt;cpu、平均负载、内存&lt;/code&gt;等信息&lt;/li&gt;
&lt;li&gt;切片完成后。存储服务器中使用&lt;code&gt;top命令&lt;/code&gt;获取切片视频存储过程中的&lt;code&gt;cpu、平均负载、内存&lt;/code&gt;等信息，使用&lt;code&gt;iostat命令&lt;/code&gt;获取切片视频存储过程中存储服务器存储过程中的&lt;code&gt;硬盘信息&lt;/code&gt;；切片服务器中使用&lt;code&gt;nload命令&lt;/code&gt;获取切片视频存储过程中的网络传输信息。&lt;/li&gt;
&lt;li&gt;分析并整理获取到的所有信息&lt;/li&gt;
&lt;li&gt;制作成结果图表&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第二套&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;Jmeter&lt;/code&gt;下发切片指令后，切片服务器中使用&lt;code&gt;top命令&lt;/code&gt;获取切片服务器中的&lt;code&gt;cpu、平均负载、内存&lt;/code&gt;等信息，使用&lt;code&gt;iostat命令&lt;/code&gt;获取切片服务器存储过程中的&lt;code&gt;硬盘信息&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;分析并整理获取到的所有信息（分出切片、存储两个时间段）&lt;/li&gt;
&lt;li&gt;制作成结果图表&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;part4-搭建测试方案所需环境&#34;&gt;Part4. 搭建测试方案所需环境
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;以第一套为例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;准备切片服务器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;服务器系统使用Linux系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器中部署切片服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器中安装&lt;code&gt;iostat、nload&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;准备存储服务器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;服务器中部署存储服务(研发已经部署，直接白嫖)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器中安装&lt;code&gt;iostat&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编写服务器脚本，获取服务器信息&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;服务器中编写所需&lt;code&gt;top、iostat、nload&lt;/code&gt;脚本命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;top脚本，用于切片服务器、存储服务器&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 总循环时间（秒）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;total_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查是否提供了总时间参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -z &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$total_time&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt;total_time&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 记录开始时间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;start_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;date +%s&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 循环直到达到总时间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# 计算当前时间与开始时间的差值（秒）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nv&#34;&gt;current_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;date +%s&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nv&#34;&gt;elapsed_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$((&lt;/span&gt;current_time &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; start_time&lt;span class=&#34;k&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# 如果已经达到或超过总时间，则退出循环&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$elapsed_time&lt;/span&gt; -ge &lt;span class=&#34;nv&#34;&gt;$total_time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nb&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# 执行提供的命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	top -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -b &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; &amp;gt;&amp;gt; /top.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# 睡眠2秒&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	sleep &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;iostat脚本，用于切片服务器、存储服务器&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 总持续时间（秒）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;total_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查是否提供了总时间参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -z &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$total_time&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt;total_time&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 记录开始时间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;start_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;date +%s&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启动 iostat命令 并将输出重定向到日志文件，同时将其放入后台运行，根据需要写iostat。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;iostat -x -m -t &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &amp;gt; /iostat.log&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 保存 nload 的进程ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 等待$1秒&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 终止 iostat 进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$PID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;nload脚本，用于切片服务器&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 总持续时间（秒）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;total_time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查是否提供了总时间参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -z &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$total_time&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt;total_time&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启动 nload 并将输出重定向到日志文件，同时将其放入后台运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;nload eno1 -u M -m -t &lt;span class=&#34;m&#34;&gt;1500&lt;/span&gt; &amp;gt; /nload.log&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 保存 nload 的进程ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 等待60秒&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 终止 nload 进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$PID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用python编写服务远程执行top、iostat脚本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要目的是为了一键自动化，不需要自己手动执行top、iostat脚本。
思路是：使用Flask实现一个前置服务。Jmeter下发切片指令前请求前置服务，自动远程执行top、iostat脚本。
看读者可能会有疑问，nload脚本呢？
我也想远程执行，但是远程执行后获取的log文件内没有任何信息。
查询得知，运行nload，Linux会拉起一个终端，但远程执行没有终端被拉起，花了一些时间也没找到解决办法，就只能手动执行了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Getdata.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;paramiko&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;threading&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Blueprint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;GetData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Blueprint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GetData&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;template_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;templates&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create_ssh_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;创建并返回一个SSH客户端的辅助函数。&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;private_key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RSAKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_private_key_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SSHClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_missing_host_key_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paramiko&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AutoAddPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pkey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;private_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute_command_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;在SSH客户端上执行命令的辅助函数。&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;channel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv_exit_status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fetch_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssh_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remote_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;local_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;从远程服务器拉取文件的辅助函数。&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssh_client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open_sftp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sftp_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;sftp_client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;local_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;成功获取 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 到 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;local_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;获取 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 时出错: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;delete_remote_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filenames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;删除远程服务器上的文件的辅助函数。&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filenames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;rm &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test165&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostname_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;切片快结束时，执行存储服务器上的脚本。&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;execute_command_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostname_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@GetData.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/GetTop/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;gettop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;获取切片时长&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;定义脚本执行时长&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;shi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;600&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;background_task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;定义服务器的信息&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;hostname1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.1.111&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;hostname2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.1.112&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\Users\Ethereal Jiang\.ssh\id_rsa&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;实例化ssh客户端并执行脚本命令。使用多线程是两个服务器互不影响。&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create_ssh_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create_ssh_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;hostname1_command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bash /opt/top_start.sh &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shi&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &amp;amp; bash /opt/iostat_start.sh &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shi&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;hostname2_command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bash /opt/top_start.sh &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shi&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &amp;amp; bash /opt/iostat_start.sh &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shi&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;thread1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;threading&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute_command_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostname1_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;thread2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;threading&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test165&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostname2_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;thread1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;thread2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;thread1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;thread2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;An error occurred: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create_ssh_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create_ssh_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;private_key_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;fetch_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/top.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;D:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;165&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;top.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;fetch_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/iostat.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;D:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;165&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;iostat.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;delete_remote_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/top.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/iostat.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;fetch_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/top.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;D:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;169&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;top.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;fetch_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/iostat.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;D:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;169&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;iostat.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;delete_remote_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/top.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/iostat.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;client1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;client2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;结束&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;task_thread&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;threading&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;background_task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;task_thread&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;任务已开始在后台处理&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;202&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# app.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;Getdata&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GetData&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secret_key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;jiang&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;register_blueprint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编写Jmeter脚本，下发切片指令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如图所示：&lt;/strong&gt;
&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/Performance/2.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;执行脚本后，首先会请求前置服务，执行服务器脚本，然后，开始并发切片指令。nload脚本就需要在切片快结束时，手动执行。结束后，前置服务自动拉取信息文件到本地。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h2 id=&#34;part5-测试结束后后分析整理本地数据&#34;&gt;Part5. 测试结束后后，分析、整理本地数据
&lt;/h2&gt;&lt;p&gt;每次并发测试三轮，信息文件放在对应的文件夹中。使用Notepad++和WPS表格处理数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notepad++查询复制数据，WPS表格分列数据。如图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/Performance/3.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part6-将分析整理后的数据制作成图表&#34;&gt;Part6. 将分析整理后的数据制作成图表
&lt;/h2&gt;&lt;p&gt;我使用的是cdn库的&lt;code&gt;Chart.js&lt;/code&gt;。示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;性能测试&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://cdn.staticfile.net/Chart.js/3.9.1/chart.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#9e9e9e&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;/* 移除默认的外边距 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;card&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#fff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#dcdee2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;border-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#e8eaec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c&#34;&gt;/* 设置左右边距为自动 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;margin-bottom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;card&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;5个并发&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canvas&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;c5_169&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canvas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canvas&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;c5_165&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canvas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 并发5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Ctx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c5_169&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Labels&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%错误率&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;切片-%CPU最大使用率&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;切片-CPU最大负载(1分钟)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;切片-内存最大使用-GiB&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;平均宽带速率-MByte/s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;最小宽带速率-MByte/s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;最大宽带速率-MByte/s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;视频总体积-GByte&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;总流程时间(分)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;存储写入时长(分)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;存储-%CPU最大使用率&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;存储-CPU最大负载(1分钟)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;存储-内存最大使用率-GiB&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 设置 X 轴上对应的标签
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;datasets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;结果&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;11.16666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.906666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6.707091217&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;53.87263617&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;8.97&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;69.28666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.86&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;10.61666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.555555556&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;20.66666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.936666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;24.95719945&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(255, 99, 132, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 粉色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(255, 159, 64, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 橙色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(255, 205, 86, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 浅黄色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(75, 192, 192, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 青绿色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(153, 102, 255, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 紫罗兰
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(255, 206, 86, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 金色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(75, 191, 92, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 橄榄绿
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(120, 75, 192, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 深紫罗兰
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(255, 92, 159, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 品红色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(92, 255, 206, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 浅绿松石色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(206, 92, 255, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 浅洋红色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(159, 255, 92, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 浅黄色绿色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(102, 86, 255, 0.2)&amp;#39;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 浅灰蓝色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(255, 99, 132)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 粉色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(255, 159, 64)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 橙色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(255, 205, 86)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 浅黄色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(75, 192, 192)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 青绿色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(153, 102, 255)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 紫罗兰
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(255, 206, 86)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 金色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(75, 191, 92)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 橄榄绿
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(120, 75, 192)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 深紫罗兰
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(255, 92, 159)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 品红色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(92, 255, 206)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 浅绿松石色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(206, 92, 255)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 浅洋红色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(159, 255, 92)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 浅黄色绿色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rgb(102, 86, 255)&amp;#39;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 浅灰蓝色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 设置线条宽度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 设置图表类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 设置数据集
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;scales&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;beginAtZero&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 设置 y 轴从 0 开始
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 这里设置图表的标题
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;datalabels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;anchor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;end&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;formatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toFixed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 设置标签格式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ChartDataLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Chart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c5_169_Ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_169_Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_ctx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c5_165&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_labels&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;avg-wMB/s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;min-wMB/s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;max-wMB/s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;avg-w_await&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;min-w_await&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;max-w_await&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;avg-%util&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;min-%util&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;max-%util&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 设置 X 轴上对应的标签
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;datasets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sdb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;52.36925926&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5.89&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;83.85&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;28.26445534&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;8.703333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;59.62&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;89.57178649&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;28.28333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;98.7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// 设置每个柱形图的背景颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(55, 163, 236, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(76, 193, 192, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(256, 205, 87, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(152, 103, 254, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 65, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 100, 133, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(154, 101, 254, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 66, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 98, 133, 0.2)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//设置每个柱形图边框线条颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(55, 163, 236)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(76, 193, 192)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(256, 205, 87)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(152, 103, 254)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 65)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 100, 133)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(154, 101, 254)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 66)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 98, 133)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 设置线条宽度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sdc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;52.37021786&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6.886666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;83.69333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;26.18413943&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;7.443333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;60.51333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;87.21247277&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;23.35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;97.43333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// 设置每个柱形图的背景颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(55, 163, 236, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(76, 193, 192, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(256, 205, 87, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(152, 103, 254, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 65, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 100, 133, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(154, 101, 254, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 66, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 98, 133, 0.2)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//设置每个柱形图边框线条颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(55, 163, 236)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(76, 193, 192)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(256, 205, 87)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(152, 103, 254)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 65)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 100, 133)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(154, 101, 254)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 66)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 98, 133)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 设置线条宽度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sdd&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;52.37001089&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6.553333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;83.18666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;26.98811547&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;8.673333333&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;56.51&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;89.42472767&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;26.16666667&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;98.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// 设置每个柱形图的背景颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(55, 163, 236, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(76, 193, 192, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(256, 205, 87, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(152, 103, 254, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 65, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 100, 133, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(154, 101, 254, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 66, 0.2)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 98, 133, 0.2)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//设置每个柱形图边框线条颜色
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(55, 163, 236)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(76, 193, 192)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(256, 205, 87)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(152, 103, 254)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 65)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 100, 133)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(154, 101, 254)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 160, 66)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;s1&#34;&gt;&amp;#39;rgba(254, 98, 133)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;borderWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 设置线条宽度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 设置图表类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 设置数据集
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;scales&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;beginAtZero&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 设置 y 轴从 0 开始
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;存储-硬盘信息&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 这里设置图表的标题
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;datalabels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;anchor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;end&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;formatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toFixed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 设置标签格式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ChartDataLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_Chart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c5_165_ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c5_165_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;chart.js&lt;/code&gt;还是比较强的，可以访问&lt;a class=&#34;link&#34; href=&#34;https://chart.nodejs.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chart.js&lt;/a&gt;学习使用。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part7-最后要说的话&#34;&gt;Part7. 最后要说的话
&lt;/h2&gt;&lt;p&gt;本文一是对本次测试做下总结，二是希望能够供读者们借鉴。&lt;/p&gt;
&lt;p&gt;整个过程还是挺漫长的，即要等待每轮测试结束，还要分析整理数据并制作成图表。不过完成这个性能测试，确给我带来了成就感。也知道自己还有很多不足，希望有大佬同我交流讨论，共同进步。&lt;/p&gt;
&lt;p&gt;本篇就在此止步了。&lt;/p&gt;
&lt;hr&gt;</description>
        </item>
        <item>
        <title>pytest</title>
        <link>https://www.jzy-blogs.cn/p/pytest/</link>
        <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/pytest/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post pytest" /&gt;&lt;h1 id=&#34;csv-data-set-config&#34;&gt;CSV Data Set Config
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;CSV Data Set Config&lt;/code&gt;是一种元件。它允许你从CSV、TXT文件中读取数据，并在测试计划的运行过程中将这些数据作为变量使用。这在进行性能测试时非常有用，尤其是当你需要模拟大量用户使用不同的输入数据时。可以添加在&lt;code&gt;测试计划&lt;/code&gt;、&lt;code&gt;线程组&lt;/code&gt;、&lt;code&gt;取样器&lt;/code&gt;下，作用域也随之变化。&lt;/p&gt;
&lt;p&gt;我们在&lt;code&gt;线程组&lt;/code&gt;文章中使用过&lt;code&gt;CSV Data Set Config&lt;/code&gt;，相信大家已经明白它的作用。这里就再详细描述一下。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Jmeter-CSV Data Set Config</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-csv-data-set-config/</link>
        <pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-csv-data-set-config/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-CSV Data Set Config" /&gt;&lt;h1 id=&#34;csv-data-set-config&#34;&gt;CSV Data Set Config
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;CSV Data Set Config&lt;/code&gt;是一种元件。它允许你从CSV、TXT文件中读取数据，并在测试计划的运行过程中将这些数据作为变量使用。这在进行性能测试时非常有用，尤其是当你需要模拟大量用户使用不同的输入数据时。可以添加在&lt;code&gt;测试计划&lt;/code&gt;、&lt;code&gt;线程组&lt;/code&gt;、&lt;code&gt;取样器&lt;/code&gt;下，作用域也随之变化。&lt;/p&gt;
&lt;p&gt;我们在&lt;code&gt;线程组&lt;/code&gt;文章中使用过&lt;code&gt;CSV Data Set Config&lt;/code&gt;，相信大家已经明白它的作用。这里就再详细描述一下。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part1文件名&#34;&gt;Part1.文件名
&lt;/h2&gt;&lt;p&gt;需输入数据文件的路径，运行时Jmeter会按路径查找数据文件。如果路径错误，Jmeter会报错。&lt;/p&gt;
&lt;p&gt;如果路径错误。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/1.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;JMeter提示试图读取一个名为test.txt的文件，但是这个文件不存在或者JMeter没有读取它的权限。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2文件编码&#34;&gt;Part2.文件编码
&lt;/h2&gt;&lt;p&gt;编码是计算机用于表示字符的数字或二进制值。以下是一些常见的编码系统及其特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ASCII (American Standard Code for Information Interchange)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：0-127&lt;/li&gt;
&lt;li&gt;字符集：基本的英文字符、数字、标点符号和控制字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Extended ASCII&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：128-255&lt;/li&gt;
&lt;li&gt;字符集：在ASCII基础上扩展，包含其他语言的字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ISO 8859-1 (Latin-1 Character Set)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：0-255&lt;/li&gt;
&lt;li&gt;字符集：扩展了ASCII，包括西欧语言的特殊字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UTF-8 (Unicode Transformation Format - 8-bit)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：1-4字节&lt;/li&gt;
&lt;li&gt;字符集：支持全球几乎所有语言的字符，包括表情符号等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UTF-16 (Unicode Transformation Format - 16-bit)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：2字节（BMP）或4字节（辅助平面）&lt;/li&gt;
&lt;li&gt;字符集：同UTF-8，但使用固定长度的字节对。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UTF-32 (Unicode Transformation Format - 32-bit)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：固定4字节&lt;/li&gt;
&lt;li&gt;字符集：同UTF-8和UTF-16，但每个字符固定占用4字节。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GBK (Chinese Internal Code Specification)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：双字节&lt;/li&gt;
&lt;li&gt;字符集：主要用于简体中文。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GB2312&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：单字节和双字节&lt;/li&gt;
&lt;li&gt;字符集：主要用于简体中文，是GBK的前身。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Big5&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：双字节&lt;/li&gt;
&lt;li&gt;字符集：主要用于繁体中文。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Shift_JIS (Shifting Japanese Industrial Standards)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：单字节和双字节&lt;/li&gt;
&lt;li&gt;字符集：主要用于日文。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;EUC-JP (Extended Unix Code - Japanese)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：多字节&lt;/li&gt;
&lt;li&gt;字符集：主要用于日文。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;KOI8-R (KOI8 Russian)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编码范围：单字节&lt;/li&gt;
&lt;li&gt;字符集：主要用于俄文。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些编码系统各有特点，适用于不同的语言和场景。随着全球化的发展，UTF-8因其兼容性和效率成为了最广泛使用的编码方式。&lt;/p&gt;
&lt;p&gt;推荐使用UTF-8编码，因为它可以表示任何语言的字符，并且是Web标准。几乎所有的现代文本编辑器、浏览器和编程语言都支持UTF-8。如遇到一些UTF-8无法兼容的语言，可以选择或编辑添加其他编码。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3变量名称&#34;&gt;Part3.变量名称
&lt;/h2&gt;&lt;p&gt;数据文件中，1列对应1个变量，从左依次对应。变量名称不应多于列数。每次读取1行。以TXT文件为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;111,222,333,444,555,666,777
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aaa,bbb,ccc,ddd,eee,fff,ggg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据文件中有5列，代表有7个变量。变量名称可以输入&lt;code&gt;a1,a2,a3,a4,a5,a6,a7&lt;/code&gt;，&lt;code&gt;a1&lt;/code&gt;获取第1列，&lt;code&gt;a7&lt;/code&gt;获取第7列。&lt;code&gt;a1&lt;/code&gt;第1次获取&lt;code&gt;111&lt;/code&gt;，&lt;code&gt;a1&lt;/code&gt;第2次获取&lt;code&gt;aaa&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part4忽略首行&#34;&gt;Part4.忽略首行
&lt;/h2&gt;&lt;p&gt;如果数据文件的第一行包含列标题，可以使用此选项跳过第一行，只读取数据。以csv文件为例：&lt;/p&gt;
&lt;div&gt;
	 &lt;table&gt;
		&lt;tr&gt;
			&lt;td&gt;姓名&lt;/td&gt;
			&lt;td&gt;联系方式&lt;/td&gt;
			&lt;td&gt;居住地址&lt;/td&gt;
			&lt;td&gt;性别&lt;/td&gt;
			&lt;td&gt;国家&lt;/td&gt;
			&lt;td&gt;民族&lt;/td&gt;
			&lt;td&gt;兴趣爱好&lt;/td&gt;
		   &lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;姜&lt;/td&gt;
			&lt;td&gt;17620815555&lt;/td&gt;
			&lt;td&gt;河南&lt;/td&gt;
			&lt;td&gt;男&lt;/td&gt;
			&lt;td&gt;中国&lt;/td&gt;
			&lt;td&gt;汉&lt;/td&gt;
			&lt;td&gt;读书&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;刘备&lt;/td&gt;
			&lt;td&gt;信使传信&lt;/td&gt;
			&lt;td&gt;汉蜀&lt;/td&gt;
			&lt;td&gt;男&lt;/td&gt;
			&lt;td&gt;蜀国&lt;/td&gt;
			&lt;td&gt;汉&lt;/td&gt;
			&lt;td&gt;当皇帝&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;第1行只是标题，实际上并不需要标题数据。这种情况下可以选择&lt;code&gt;True&lt;/code&gt;，不获取第1行。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part5分隔符&#34;&gt;Part5.分隔符
&lt;/h2&gt;&lt;p&gt;不建议更改，使用&lt;code&gt;,(英文符)&lt;/code&gt;即可。这代表着TXT文件中列于列之间要用&lt;code&gt;,&lt;/code&gt;分隔。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part6是否允许带引号&#34;&gt;Part6.是否允许带引号
&lt;/h2&gt;&lt;p&gt;以TXT文件为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;444&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果选择&lt;code&gt;True&lt;/code&gt;，引用变量时，获取的值会是&lt;code&gt;444&lt;/code&gt;。如果选择&lt;code&gt;False&lt;/code&gt;，引用变量时，获取的值会是&lt;code&gt;&amp;quot;444&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part7遇到文件结束符再次循环&#34;&gt;Part7.遇到文件结束符再次循环
&lt;/h2&gt;&lt;p&gt;文件结束符（End Of File，简称EOF）是一个用于表示文件内容结束的信号，在txt、csv等文件的未尾以&lt;code&gt;&amp;lt;EOF&amp;gt;&lt;/code&gt;结束。当程序读取文件时，以&lt;code&gt;&amp;lt;EOF&amp;gt;&lt;/code&gt;来确定是否已经到达文件的末尾。&lt;/p&gt;
&lt;p&gt;当读取到文件的结束符&lt;code&gt;&amp;lt;EOF&amp;gt;&lt;/code&gt;，线程或循环还没结束时。如果选择&lt;code&gt;True&lt;/code&gt;，接下来的线程或循环会继续从文件的首行开始（可能忽略首行）。如果选择&lt;code&gt;False&lt;/code&gt;，接下来的线程或循环会一直获取文件的结束符&lt;code&gt;&amp;lt;EOF&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part8遇到文件结束符停止线程&#34;&gt;Part8.遇到文件结束符停止线程
&lt;/h2&gt;&lt;p&gt;当读取到文件的结束符&lt;code&gt;&amp;lt;EOF&amp;gt;&lt;/code&gt;，线程或循环还没结束时。如果选择&lt;code&gt;True&lt;/code&gt;，接下来的线程或循环不会再继续。如果选择&lt;code&gt;False&lt;/code&gt;，不会影响到线程或循环的继续。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part9线程共享模式&#34;&gt;Part9.线程共享模式
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;示例txt文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;111,222,333,444
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aaa,bbb,ccc,ddd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;888,999,1010,2020
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fff,iii,jjj,kkk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;6060,7070,8080,9090
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000,ppp,qqq,rrr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/1.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;此时只有1个线程，线程共享模式配置为&lt;code&gt;所有线程&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;所有线程&#34;&gt;所有线程
&lt;/h3&gt;&lt;p&gt;所有线程共享同一个CSV文件。这是默认的共享模式。在这个模式下，所有线程将按照顺序读取CSV文件中的数据，直到文件结束。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例Jmeter脚本运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/2.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;请求1、请求2&lt;/code&gt;同属1个线程，从&lt;code&gt;CSV Data Set Config&lt;/code&gt;中所获取的数据也是一样的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改示例Jmeter脚本，线程组的线程数为 2 ，运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/3.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;线程组1-1&lt;/code&gt;的&lt;code&gt;请求1、请求2&lt;/code&gt;，从&lt;code&gt;CSV Data Set Config&lt;/code&gt;中所获取的数据相同。&lt;code&gt;线程组1-2&lt;/code&gt;的&lt;code&gt;请求1、请求2&lt;/code&gt;，从&lt;code&gt;CSV Data Set Config&lt;/code&gt;中所获取的数据相同。不同线程所获取的数据不同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改示例Jmeter脚本，新增一个线程组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/2.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/4.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;两个线程组，每个线程组两个线程，共四个线程。这四个线程顺序从&lt;code&gt;CSV Data Set Config&lt;/code&gt;获取数据。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;当前线程组&#34;&gt;当前线程组
&lt;/h3&gt;&lt;p&gt;在这个模式下，只有同一个线程组内的线程会共享CSV文件。比如数据文件有10行数据，并且有10个线程在同一个线程组中，每个线程将分别读取一行数据。不同的线程组分别独立从&lt;code&gt;CSV Data Set Config&lt;/code&gt;获取数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改示例Jmeter脚本，新增一个线程组，&lt;code&gt;CSV Data Set Config&lt;/code&gt; 线程共享模式配置为 &lt;code&gt;当前线程组&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/3.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/5.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;同是两个线程组、每个线程组两个线程。但配置&lt;code&gt;当前线程组共享&lt;/code&gt;，两个线程组分别独立从&lt;code&gt;CSV Data Set Config&lt;/code&gt;获取数据。所以&lt;code&gt;线程组1-1&lt;/code&gt;与&lt;code&gt;线程组2-1&lt;/code&gt;获取的数据一致。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;当前线程&#34;&gt;当前线程
&lt;/h3&gt;&lt;p&gt;在这个模式下，不同线程不会共享CSV文件，分别独立从&lt;code&gt;CSV Data Set Config&lt;/code&gt;获取数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当前线程组-Jmeter脚本中，&lt;code&gt;CSV Data Set Config&lt;/code&gt; 线程共享模式配置为 &lt;code&gt;当前线程&lt;/code&gt;，运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/CSVDataSetConfig/6.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;每个线程都独立从&lt;code&gt;CSV Data Set Config&lt;/code&gt;获取数据。所以各个线程获取的数据是一致的。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part10循环编辑&#34;&gt;Part10.循环&amp;amp;&amp;amp;编辑
&lt;/h2&gt;&lt;p&gt;其中&lt;code&gt;忽略首行、是否允许带引号、遇到文件结束符再次循环、遇到文件结束符停止线程、线程共享模式&lt;/code&gt;的选项中还有&lt;code&gt;编辑&lt;/code&gt;选项。因没有使用过，我并不知怎样使用及作用。读者们可以去探究一番。&lt;/p&gt;
&lt;p&gt;另外在使用&lt;code&gt;CSV Data Set Config&lt;/code&gt;时，要注意线程数及循环次数。&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;所有线程&lt;/code&gt;，如果有2个线程组、每个线程组2个线程及多次循环，数据文件有100行。运行时，第1次循环。2个线程组总4个线程依次获取数据文件的前4行。第2次循环。2个线程组总4个线程依次获取数据文件的5-8行。依次类推从数据文件中获取数据。&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;当前线程组&lt;/code&gt;，如果有2个线程组、每个线程组2个线程及多次循环，数据文件有100行。
运行时，第1次循环。每个线程组独立从数据文件中获取数据，每个线程组中的2个线程依次获取数据文件的前2行。第2次循环。每个线程组独立从数据文件中获取数据，每个线程组中的2个线程依次获取数据文件的3-4行。依次类推从数据文件中获取数据。&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;当前线程&lt;/code&gt;，如果有2个线程组、每个线程组2个线程及多次循环，数据文件有100行。
运行时，第1次循环。每个线程独立从数据文件中获取数据，每个线程获取数据文件的第1行。第2次循环。每个线程独立从数据文件中获取数据，每个线程获取数据文件的第2行。依次类推从数据文件中获取数据。&lt;/p&gt;
&lt;h2 id=&#34;part11最后要说&#34;&gt;Part11.最后要说
&lt;/h2&gt;&lt;p&gt;衷心希望读者进行评论，指出我的不足或者进行交流。&lt;/p&gt;
&lt;p&gt;就让笔迹停在这里吧。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用VMware搭建测试环境</title>
        <link>https://www.jzy-blogs.cn/p/%E4%BD%BF%E7%94%A8vmware%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</link>
        <pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/%E4%BD%BF%E7%94%A8vmware%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Other/VMware1/0.png" alt="Featured image of post 使用VMware搭建测试环境" /&gt;&lt;h2 id=&#34;part1背景&#34;&gt;Part1.背景
&lt;/h2&gt;&lt;p&gt;咱们测试同学有时候不得不需要自己去搭建一个测试环境，保证自己的测试可以顺畅进行。测试环境可以运行在物理机或者虚拟机上。测试环境在物理机上无疑更真实、准确，但物理机价格、便捷方面都不如虚拟机。而且虚拟机通过精心搭配，真实、准确方面也不容小觑。&lt;/p&gt;
&lt;p&gt;现在市面上可以搭建虚拟机的软件不少。如&lt;strong&gt;Vmware&lt;/strong&gt;、&lt;strong&gt;VirtualBox&lt;/strong&gt;、&lt;strong&gt;QEMU&lt;/strong&gt;、&lt;strong&gt;Parallels Desktop&lt;/strong&gt;、&lt;strong&gt;Microsoft Hyper-V&lt;/strong&gt;等。我为什么推荐VMware呢？因为我第一次搭建虚拟机使用的就是它，而且只用过它😅。无论如何，开始我们的VMware之旅吧。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2准备vmware&#34;&gt;Part2.准备VMware
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;下载VMware&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://www.vmware.com/products/desktop-hypervisor.html&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://www.vmware.com/products/desktop-hypervisor.html&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;VMware下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;包含Mac和window版本&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://www.vmware.com/products/desktop-hypervisor.html&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fwww.vmware.com%2fproducts%2fdesktop-hypervisor.html&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;根据自己的系统去下载对应版本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/1.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;请注意这里下载的是Pro版本，是收费的。你也可以去下载免费版本，或者去搜激活码来进行激活。不过你懂的。我不提供方法。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;安装VMware&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下载成功后，双击安装后一直下一步就行。然后界面如下：&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/2.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;我这里已经搭建了2个虚拟机了，你们刚进去的时候，是没有这两个虚拟机的。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3新建虚拟机&#34;&gt;Part3.新建虚拟机
&lt;/h2&gt;&lt;p&gt;如图.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/3.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/4.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;此时一个虚拟机就搭建好了。图中的&lt;code&gt;测试安装centos 7&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/5.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part4设置虚拟机&#34;&gt;Part4.设置虚拟机
&lt;/h2&gt;&lt;p&gt;后面还需要对虚拟机进行一些设置，才能达成目的。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/6.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;有关&lt;code&gt;网络连接&lt;/code&gt;的知识可以点击下方卡片进行了解。&lt;/p&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://docs.vmware.com/cn/VMware-Workstation-Pro/17/com.vmware.ws.using.doc/GUID-0CE1AE01-7E79-41BB-9EA8-4F839BE40E1A.html&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://docs.vmware.com/cn/VMware-Workstation-Pro/17/com.vmware.ws.using.doc/GUID-0CE1AE01-7E79-41BB-9EA8-4F839BE40E1A.html&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;使用 VMware Workstation Pro&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://docs.vmware.com/cn/VMware-Workstation-Pro/17/com.vmware.ws.using.doc/GUID-0CE1AE01-7E79-41BB-9EA8-4F839BE40E1A.html&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fdocs.vmware.com%2fcn%2fVMware-Workstation-Pro%2f17%2fcom.vmware.ws.using.doc%2fGUID-0CE1AE01-7E79-41BB-9EA8-4F839BE40E1A.html&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;h2 id=&#34;part5运行虚拟机&#34;&gt;Part5.运行虚拟机
&lt;/h2&gt;&lt;p&gt;点击运行虚拟机后，VMware开始运行ISO镜像文件。然后就是各个系统经典的初始化界面。我这里以&lt;code&gt;centos 7&lt;/code&gt; 为例。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/7.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;以上示例的是&lt;code&gt;centos7&lt;/code&gt;。需要知道的是，每个系统的初始化界面可能有区别。比如&lt;code&gt;windows&lt;/code&gt;一定与&lt;code&gt;centos 7&lt;/code&gt;不同。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part6网络配置&#34;&gt;Part6.网络配置
&lt;/h2&gt;&lt;p&gt;此时安装好的&lt;code&gt;centos 7&lt;/code&gt;还不能访问inter网、局域网，甚至主机。访问其他网络，需要进行一些配置。我们以&lt;code&gt;桥接模式&lt;/code&gt;为例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VMware上进行设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Other/VMware1/8.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;centos 7上进行配置&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;查看网口信息&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 查看网口信息
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip link
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 示例centos 7，输出信息如下：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2: ens33: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    link/ether 00:0c:29:cf:f0:d8 brd ff:ff:ff:ff:ff:ff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出的网口信息有&lt;code&gt;lo&lt;/code&gt;、&lt;code&gt;ens33&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lo&lt;/code&gt; 是本地回环接口，通常用于本地主机上的网络服务。它总是激活的，并且可以用于本地主机上的网络请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ens33&lt;/code&gt; 是一个以太网接口。这个接口是连接到物理网络的，但是当前的输出并没有显示IP地址分配情况。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编辑网络配置文件&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 编辑ens33的配置文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vi /etc/sysconfig/network-scripts/ifcfg-ens33
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置网络接口&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 只需要自动分配IP就行。修改以下配置。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BOOTPROTO=dhcp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ONBOOT=yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重启网络服务&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 保存并关闭配置文件，然后重启网络服务以应用更改
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl restart network
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;验证网络配置&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 使用ping命令测试网络连接
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ping -c 4 8.8.8.8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 使用ip addr 检查IP地址
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip addr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/VMware/VMware1/9.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;远程连接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;MobaXterm&lt;/code&gt;远程。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/VMware/VMware1/10.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;如果远程失败，可以使用&lt;code&gt;systemctl stop firewalld&lt;/code&gt;关闭防火墙，再远程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上以&lt;code&gt;centos 7&lt;/code&gt;为示例。其他系统的IP设置可能不是这样，至少&lt;code&gt;windows&lt;/code&gt;肯定与&lt;code&gt;centos 7&lt;/code&gt;不同。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part7最后要说&#34;&gt;Part7.最后要说
&lt;/h2&gt;&lt;p&gt;到这一步呢，距离你搭建完整的测试环境，只剩下部署你们的产品了。我就没有发言权了。另外还有网络这块，VMware还有&lt;code&gt;NAT模式、仅主机模式、自定义、LAN区段&lt;/code&gt;值得探讨。除此之外，还有其他的内容。不过都放在之后的文章中吧，本文不在阐述。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Jmeter-HTTP请求</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-http%E8%AF%B7%E6%B1%82/</link>
        <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-http%E8%AF%B7%E6%B1%82/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-HTTP请求" /&gt;&lt;h1 id=&#34;http请求&#34;&gt;&lt;em&gt;HTTP请求&lt;/em&gt;
&lt;/h1&gt;&lt;p&gt;JMeter提供多种取样器，HTTP取样器（HTTP Sampler）无疑是最核心的一个。HTTP取样器是用来模拟客户端和服务器之间HTTP请求和接收响应的工具，它可以发送各种类型的HTTP请求，如GET、POST、PUT、DELETE等，用于请求不同的资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP取样器控制面板中包含元素：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;名称、注释&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;web服务器&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTTP请求&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;消息体数据&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件上传&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;客户端实现&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;超时&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;从HTML文件获取所有内含的资源&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;源地址&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;代理服务器&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他任务&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;part1web服务器http请求&#34;&gt;&lt;em&gt;Part1.web服务器&amp;amp;&amp;amp;HTTP请求&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;web服务器&lt;/code&gt;没什么好讲的，只保证&lt;code&gt;IP/域名、端口、路径、请求方式、协议&lt;/code&gt;正确就好。内容编码最好输入UTF-8(兼容大部分语言)，防止接口解析时乱码。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;自动重定向和跟随重定向&#34;&gt;&lt;em&gt;自动重定向和跟随重定向&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;自动重定向&lt;/code&gt;只针对Get和Head请求，自动重定向转向到最终目标页面，但是Jmeter不记录重定向的中间页面过程，只记录最终页面返回结果。在结果树中，只能看到最终页面的服务器返回。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;跟随重定向&lt;/code&gt;是http request 取样器的默认选项，会自动跳转到目标地址。Jmeter会记录重定向过程中的所有请求的响应结果。在结果树中，可以看到所有请求的服务器返回。&lt;/p&gt;
&lt;p&gt;两者只能选中一个。这次我们访问知乎来进行测试。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;添加HTTP取样器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTPS://www.zhihu.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;勾选&lt;code&gt;跟随重定向&lt;/code&gt;，运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/1.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;HTTP请求-0的GET https（请求地址）为&lt;code&gt;//www.zhihu.com/&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;HTTP请求-1的GET https（请求地址）为&lt;code&gt;//www.zhihu.com/signin?next=%2F&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;HTTP请求-0的响应数据是一个重定向的a链接，链接地址为&lt;code&gt;//www.zhihu.com/signin?next=%2F&lt;/code&gt;-即HTTP请求-1的请求地址。&lt;/p&gt;
&lt;p&gt;HTTP请求-1的响应才是最终的页面。Jmeter的查看结果树记录了重定向过程。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;勾选&lt;code&gt;自动重定向&lt;/code&gt;，运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/2.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;结果树中只有一个HTTP请求，请求地址为&lt;code&gt;//www.zhihu.com/signin?next=%2F&lt;/code&gt;-即最终的页面数据。查看结果树中没有记录重定向过程。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;使用keepalive&#34;&gt;&lt;em&gt;使用KeepAlive&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;选中该选项，JMeter和目标服务器之间使用Keep-Alive方式进行HTTP通信，默认选中。keep-alive属性，用于建立长连接，可以避免连接频繁建立和释放的开销。有兴趣的可以搜索&lt;code&gt;HTTP的Keep-Alive模式&lt;/code&gt;，详细了解。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;与浏览器兼容的头&#34;&gt;&lt;em&gt;与浏览器兼容的头&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;没有发现有什么作用。希望有知道的读者可以通过评论指正我。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2请求参数-get&#34;&gt;&lt;em&gt;Part2.请求参数-GET&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;请求方式为GET时，请求参数一般都直接跟在url后面，不需要参数类型。当然也可以请求参数不跟在url后面，不过比较少见。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@HTTPRequest.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/HTTPRequest2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;此次请求的请求方式是GET，请求参数为: name=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请使用GET请求方式&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt; 中添加 &lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/HTTPRequest2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数名称：&lt;code&gt;name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数值：&lt;code&gt;随意写就行&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;GET请求下，使用参数发送请求，运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/4.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;请求数据中的第一行：&lt;code&gt;GET http://127.0.0.1:5000/api/HTTPRequest2/?name=姜&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;?name=姜&lt;/code&gt;就是脚本中添加的参数。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;必须使用参数吗？我们可以尝试一下不使用参数的方法（修改示例脚本）&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;HTTP 请求&lt;/code&gt;中删除参数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;HTTP 请求&lt;/code&gt;中路径改为&lt;code&gt;/api/HTTPRequest2/?name=姜&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;看一下修改示例脚本后的运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/5.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;仔细看图会发现，与使用参数方法的结果是一样的。&lt;/p&gt;
&lt;p&gt;都是&lt;code&gt;GET http://127.0.0.1:5000/api/HTTPRequest2/?name=姜 &lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3请求参数-postapplicationx-www-from-urlencoded&#34;&gt;&lt;em&gt;Part3.请求参数-POST&amp;amp;application/x-www-from-urlencoded&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;请求方式&lt;code&gt;POST&lt;/code&gt;，常用的的请求参数类型(Content-Type)有&lt;code&gt;application/x-www-from-urlencoded&lt;/code&gt;、&lt;code&gt;multipart/form-data&lt;/code&gt;、&lt;code&gt;raw&lt;/code&gt;、&lt;code&gt;binary&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;application/x-www-from-urlencoded&lt;/code&gt;会将表单内的数据转换为键值对，比如&lt;code&gt;name=python&amp;amp;age = 22&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这种方式只能以键值对形式发送参数，如果不指定&lt;code&gt;content-type&lt;/code&gt;，默认&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@HTTPRequest.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/HTTPRequest2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;此次请求的请求方式是GET，请求参数为: name=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请使用GET请求方式&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt; 中添加 &lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/HTTPRequest2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数名称：&lt;code&gt;随意写就行&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数值：&lt;code&gt;随意写就行&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/6.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Request Headers&lt;/code&gt;中显示 Content-Type 为 &lt;code&gt;application/x-www-form-urlencoded; charset=UTF-8&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Request Body&lt;/code&gt;中的 POST data 也是键值对形式：
&lt;code&gt;aaaa=姜振园&amp;amp;bbb=姜振园&amp;amp;ccc=姜振园&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part4请求参数-postmultipartform-data&#34;&gt;&lt;em&gt;Part4.请求参数-POST&amp;amp;multipart/form-data&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;multipart/form-data&lt;/code&gt;会将表单的数据处理为一条消息，以标签为单元，用分隔符分开。就像这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;profile&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multipart&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boundary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;part&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boundary&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# multipart/form-data; boundary=example-part-boundary表示这个请求的的消息类型是 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# multipart-form-data，每个 part 之间的边界为 example-part-boundary。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# example-part-boundary是一段很长的字符串，如bqtFfLzQXUbOvsHrs8eOO9kIlZ30hA。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;part&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boundary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Disposition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Nicholas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 第一个 part 的类型为 text/plain，它在表单上对应的 key 为 username，value 为 Nicholas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;part&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boundary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Disposition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;country&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;China&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;city&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Beijing&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 第二个 part 的类型为 application/json，它在表单上对应的 key 为 address。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;part&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boundary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Disposition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;avatar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;my_avatar.jpeg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jpeg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 第三个 part 的数据类型为 image/jpeg，它在表单上对应的 key 为 avatar，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 并且 part 的头部还附加了文件名相关的元数据 filename=&amp;#34;my_avatar.jpeg。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;part&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;boundary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 最后面的 --example-part-boundary-- 表示整个 multipart 消息的结束。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于这种方式可以将数据分为很多部分，它既可以上传键值对，也可以上传文件，甚至多个文件。当上传的字段是文件时，会有Content-Type来说明文件类型：&lt;code&gt;Content-disposition&lt;/code&gt;，用来说明字段的一些信息。&lt;/p&gt;
&lt;p&gt;每部分都是以&lt;code&gt;-boundary&lt;/code&gt;开始，紧接着是内容描述信息，然后是回车，最后是字段具体内容(字段、文本或二进制等)。如果传输的是文件，还要包含文件名和文件类型信息。消息主体最后以-boundary-标示结束。&lt;/p&gt;
&lt;p&gt;当使用&lt;code&gt;POST&lt;/code&gt;方式进行请求&amp;amp;请求参数包含一般参数&amp;amp;文件时，会自动指定参数类型为&lt;code&gt;multipart/form-data&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@HTTPRequest.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/HTTPRequest1/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;upload_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;缺少username字段&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;缺少address字段&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;image&amp;#39;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;缺少image字段&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;image_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;image&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;未选择文件&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;secure_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;image_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;save_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;C:/image/&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 指定保存路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# 检查保存路径是否存在，如果不存在则创建&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makedirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# 保存文件到指定保存路径，Jmeter请求后可以到save_path指定路径查看上传的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;image_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;avatar_filename&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;未选择文件&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 取样器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/HTTPRequest1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数1名称：&lt;code&gt;username&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数1值:&lt;code&gt;姜振园&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数2名称：&lt;code&gt;address&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参数2值:&lt;code&gt;{&amp;quot;country&amp;quot;: &amp;quot;中国&amp;quot;,&amp;quot;city&amp;quot;: &amp;quot;杭州&amp;quot; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件上传名称：&lt;code&gt;正确的文件路径（可以上传图片）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件上传参数名称：&lt;code&gt;image&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/3.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;请求参数类型是&lt;code&gt;multipart/form-data&lt;/code&gt;，响应也是正确的。另外可以去save_path查看上传的图片或文件。&lt;/p&gt;
&lt;p&gt;当然也可使用&lt;code&gt;消息体&lt;/code&gt;添加请求参数(可以添加 Text、JavaScript、JSON、HTML、XML 等格式文件)&amp;amp;&amp;amp;上传文件。读者可以自己尝试一下。&lt;/p&gt;
&lt;p&gt;请求方式为&lt;code&gt;POST&lt;/code&gt;&amp;amp;&amp;amp;请求参数包含一般参数&amp;amp;&amp;amp;不上传文件，请求参数类型默认&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这种场景下，如果想要指定请求参数类型为&lt;code&gt;multipart/ form-data&lt;/code&gt;，可以勾选&lt;code&gt;对POST使用multipart/ form-data&lt;/code&gt;。读者可以自己尝试一下。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part5请求参数-posttextplain&#34;&gt;&lt;em&gt;Part5.请求参数-POST&amp;amp;text/plain&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;raw&lt;/code&gt;是指可以上传任意格式的文本，如text、json、xml、html等。这里演示一下如何上传文本内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;text/plain&lt;/code&gt;用于发送纯文本内容，空格符为&lt;code&gt;+&lt;/code&gt;，不对特殊字符进行编码。&lt;/p&gt;
&lt;p&gt;Jmeter中，消息体中输入相应内容，请求参数类型默认为&lt;code&gt;text/plain&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@HTTPRequest.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/HTTPRequest2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;此次请求的请求方式是GET，请求参数为: name=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请使用GET请求方式&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt; 中添加 &lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/HTTPRequest2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;消息体数据：&lt;code&gt;随意（中间加空格）写就行&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/7.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Content-Type: text/plain; charset=UTF-8&lt;/code&gt;，表明该请求参数类型为&lt;code&gt;text/plain&lt;/code&gt;。
请求参数就是纯文本：&lt;code&gt;随意写就行&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part6请求参数-postapplicationjson&#34;&gt;&lt;em&gt;Part6.请求参数-POST&amp;amp;application/json&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;application/json&lt;/code&gt;用于发送JSON字符串，也是比较常用的一种方式。&lt;/p&gt;
&lt;p&gt;Jmeter中发送JSON字符串，需要在消息体中输入JSON格式内容&amp;amp;&amp;amp;在消息头管理器添加&lt;code&gt;content-type：application/json&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@HTTPRequest.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/HTTPRequest3/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;httprequest3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请求参数错误&amp;#34;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;此次请求的请求方式是GET，请求参数为: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请使用POST请求方式&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt; 中添加 &lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/HTTPRequest3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;消息体数据：&lt;code&gt;{&amp;quot;name&amp;quot;:&amp;quot;姜振园&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP信息请求头管理器&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;content-type&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;application/json&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/8.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;请求参数类型为&lt;code&gt;application/json&lt;/code&gt;。请求参数就是JSON字符串：&lt;code&gt;{&amp;quot;name&amp;quot;:&amp;quot;姜振园&amp;quot;}&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;还可以请求&lt;code&gt;HTML、XML、CSS、JS&lt;/code&gt;等内容，上传方法与&lt;code&gt;JSON&lt;/code&gt;类似。消息体中输入相应格式内容&amp;amp;&amp;amp;信息头管理器中添加对应的&lt;code&gt;Content-Type&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HTMl&lt;/code&gt;的请求参数类型是&lt;code&gt;text/html&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;XML&lt;/code&gt;的请求参数类型是&lt;code&gt;text/XML&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CSS&lt;/code&gt;的请求参数类型是&lt;code&gt;text/CSS&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JS&lt;/code&gt;的请求参数类型是&lt;code&gt;text/JS&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;读者可以尝试一下。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part7请求参数-postbinary&#34;&gt;&lt;em&gt;Part7.请求参数-POST&amp;amp;binary&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;binary&lt;/code&gt;即&lt;code&gt;application/octet-stream&lt;/code&gt;，二进制数据。通常用来上传二进制文件，没有键值。&lt;/p&gt;
&lt;p&gt;Jmeter中，消息体中输入&lt;code&gt;二进制数据&lt;/code&gt;&amp;amp;&amp;amp;消息头管理器添加&lt;code&gt;content-type:application/octet-stream&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://uutool.cn/txt2bin/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;文本转二进制工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;httprequest4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;你的请求方式有误&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;405&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;application/octet-stream&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;text_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;UnicodeDecodeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;解码错误，数据可能不是UTF-8编码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;binary_strings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;decimal_numbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binary&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binary_strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;unicode_characters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decimal&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decimal_numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unicode_characters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;不支持的Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;415&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt; 中添加 &lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/HTTPRequest4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;消息体数据：&lt;code&gt;110001000010001 110011000101111 1001010 1101001 1100001 1101110 1100111&lt;/code&gt;（&amp;lsquo;我是Jiang&amp;rsquo;的二进制流）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP信息请求头管理器&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;content-type&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;application/octet-stream&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/HTTPRequest/9.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Content-Type: application/octet-stream&lt;/code&gt;，表明该请求参数类型为&lt;code&gt;application/octet-stream&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;请求参数就是二进制流：&lt;code&gt;110001000010001 110011000101111 1001010 1101001 1100001 1101110 1100111&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;响应数据&lt;code&gt;我是Jiang&lt;/code&gt;正是二进制文件处理后的文本内容。&lt;/p&gt;
&lt;h2 id=&#34;part8http请求默认值&#34;&gt;Part8.Http请求默认值
&lt;/h2&gt;&lt;p&gt;Jmeter中提供配置元件&lt;code&gt;HTTP请求默认值&lt;/code&gt;，它提供默认能力。比如&lt;code&gt;HTTP默认值&lt;/code&gt;中指定了&lt;code&gt;IP、端口&lt;/code&gt;，其作用域下任何没有指定IP、端口的&lt;code&gt;HTTP取样器&lt;/code&gt;都会使用&lt;code&gt;HTTP默认值&lt;/code&gt;中&lt;code&gt;IP、端口&lt;/code&gt;。其他参数的逻辑一致。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HTTP请求默认值&lt;/code&gt;中不能进行文件上传。&lt;/p&gt;
&lt;h2 id=&#34;part9最后要说&#34;&gt;&lt;em&gt;Part9.最后要说&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;现在的应用基本都使用HTTP协议进行传输，希望本篇能帮助读者了解及使用Jmeter发送HTTP协议的请求。&lt;/p&gt;
&lt;p&gt;衷心希望读者进行评论及指正。&lt;/p&gt;
&lt;p&gt;那就在这里结束啦。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Jmeter-线程组下篇</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E7%BA%BF%E7%A8%8B%E7%BB%84%E4%B8%8B%E7%AF%87/</link>
        <pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E7%BA%BF%E7%A8%8B%E7%BB%84%E4%B8%8B%E7%AF%87/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-线程组下篇" /&gt;&lt;h1 id=&#34;线程组&#34;&gt;线程组
&lt;/h1&gt;&lt;p&gt;线程组作为JMeter测试计划的核心组件之一，对于模拟并发用户的行为至关重要。线程组元件是整个测试计划的入口，所有的取样器和控制器必须放置在线程组下。&lt;/p&gt;
&lt;p&gt;可以将线程组视为一个虚拟用户池，其中每个线程可被理解为一个虚拟用户，多个虚拟用户同时执行相同的一批任务。&lt;/p&gt;
&lt;p&gt;在这个虚拟用户池中，每个线程之间是相互隔离且互不影响的。每个线程的执行过程中，操作的变量不会对其他线程的变量值产生影响。&lt;/p&gt;
&lt;p&gt;线程组的关键任务之一是定义并发用户的行为，包括设置线程数、循环次数、启动延迟等关键参数。通过适当配置线程组，测试人员可以模拟多用户在系统中同时执行任务的场景，从而评估系统的性能和稳定性。&lt;/p&gt;
&lt;p&gt;通过灵活使用setup线程组、线程组、tearDown线程组、开放模型线程组，配置前置操作、主要操作、后置操作，更能真实、详细的评估系统。&lt;/p&gt;
&lt;p&gt;线程组分为四类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;线程组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;setUp线程组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tearDown线程组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开放模型线程组&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线程组、setUp线程组、tearDown线程组控制面板中的元素基本一致：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;名称、注释&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在取样器错误后执行的动作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ramp-Up时间&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Same user on each iteration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;延迟创建线程直到需要（只有线程组有）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调度器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开放模型线程组控制面板中的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;名称、注释&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在取样器错误后执行的动作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调度计划&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;随机种子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;part1取样器错误后执行的动作&#34;&gt;Part1.取样器错误后执行的动作
&lt;/h2&gt;&lt;p&gt;在JMeter中，取样器（Sampler）是用于模拟用户请求发送到目标服务器的组件，例如HTTP请求、FTP请求等。当取样器执行过程中出现错误时，可以通过配置相应的动作来处理这些错误。以下是一些处理取样器错误时，线程组中常见方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;停止线程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;任何一个线程（用户）在执行过程中遇到错误时，该线程被停止，不影响其他线程（用户）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启动下一进程循环&lt;/strong&gt;
任何一个线程（用户）在执行过程中遇到错误时，Jmeter会立即停止当前线程的本次执行，并进行当前线程（用户）的下次执行，主要应用于线程多次循环时。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;继续（无需演示）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JMeter将在取样器执行错误时，忽略错误继续执行本线程的后续操作及执行其他线程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;停止线程-多线程&#34;&gt;停止线程-多线程
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup5/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止线程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;线程数&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下依次添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求-${yonghu}&lt;/code&gt;（在前）、&lt;code&gt;正确请求-${yonghu}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup5/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;CSV 数据文件设置&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件名&lt;/code&gt;：&lt;code&gt;ceshi.txt的路径&lt;/code&gt;&lt;/p&gt;
  &lt;p&gt;&amp;emsp;ceshi.txt文件内容：（复制后，手动删除前面的空格）&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;200,用户1&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;1111,用户2&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;200,用户3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件编码&lt;/code&gt;：&lt;code&gt;UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;变量名称&lt;/code&gt;：&lt;code&gt;ceshi,yonghu&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;${ceshi}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/1.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/2.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;连续运行了3次，结果是一致的。总共有三个用户执行线程组，其中&lt;code&gt;用户1&lt;/code&gt;、&lt;code&gt;用户3&lt;/code&gt;完全执行成功；&lt;code&gt;用户2&lt;/code&gt;只执行了&lt;code&gt;错误请求&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;停止线程&lt;/code&gt;，&lt;code&gt;用户2&lt;/code&gt;执行&lt;code&gt;错误请求&lt;/code&gt;时发生错误，Jmeter只会停止&lt;code&gt;用户2&lt;/code&gt;的后续执行，不会影响其他线程。&lt;/p&gt;
&lt;p&gt;多线程组也是多线程，读者在实际的脚本编写中，要注意每个线程的情况去使用&lt;code&gt;停止线程&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;停止线程-多循环&#34;&gt;停止线程-多循环
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup5/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止线程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;循环次数&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下依次添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求-${xunhuan}&lt;/code&gt;（在前）、&lt;code&gt;正确请求-${xunhuan}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup5/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;CSV 数据文件设置&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件名&lt;/code&gt;：&lt;code&gt;ceshi.txt的路径&lt;/code&gt;&lt;/p&gt;
  &lt;p&gt;&amp;emsp;ceshi.txt文件内容：（复制后，手动删除前面的空格）&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;200,第1次循环&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;1111,第2次循环&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;200,第3次循环&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件编码&lt;/code&gt;：&lt;code&gt;UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;变量名称&lt;/code&gt;：&lt;code&gt;ceshi,xunhuan&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;${ceshi}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/3.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/4.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;连续运行了3次，结果是一致的。用户在第2次循环执行到&lt;code&gt;错误请求&lt;/code&gt;时，Jmeter停止测试。&lt;/p&gt;
&lt;p&gt;因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;停止线程&lt;/code&gt;，用户的第2次循环，执行&lt;code&gt;错误请求&lt;/code&gt;时发生错误，Jmeter停止用户的后续执行（就它一个线程）。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;启动下一进程循环&#34;&gt;&lt;em&gt;启动下一进程循环&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup5/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;启动下一线程循环&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;循环次数&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下依次添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求-${xunhuan}&lt;/code&gt;（在前）、&lt;code&gt;正确请求-${xunhuan}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup5/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;CSV 数据文件设置&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件名&lt;/code&gt;：&lt;code&gt;ceshi.txt的路径&lt;/code&gt;&lt;/p&gt;
  &lt;p&gt;&amp;emsp;ceshi.txt文件内容：（复制后，手动删除前面的空格）&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;200,第1次循环&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;1111,第2次循环&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;200,第3次循环&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件编码&lt;/code&gt;：&lt;code&gt;UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;变量名称&lt;/code&gt;：&lt;code&gt;ceshi,xunhuan&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;${ceshi}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/5.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/6.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;连续运行了3次，结果是一致的。用户执行了3次循环，其中第2次循环中，&lt;code&gt;错误请求&lt;/code&gt;出现错误，跳过&lt;code&gt;正确请求&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;启动下一线程循环&lt;/code&gt;，用户的第2次循环，执行&lt;code&gt;错误请求&lt;/code&gt;时发生错误，Jmeter会跳过用户的本次执行，进行用户的后续执行。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part2ramp-up时间&#34;&gt;&lt;em&gt;Part2.ramp-up时间&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;ramp-up时间用于设置启动所有线程所需要的时间。例如：线程数设置为10，ramp-up时间设置为100秒，那么JMeter将使用100秒使10个用户启动并运行，即每个用户将在前一个用户启动后的10秒启动。&lt;/p&gt;
&lt;p&gt;如果ramp-up值设置得很小、线程数又设置得很大，刚开始执行测试时会对服务器产生很大的压力。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup5/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ramp-Up时间&lt;/code&gt;：9&lt;/p&gt;
&lt;p&gt;&lt;code&gt;线程数&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加1个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup5/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/7.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/8.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;连续运行了3次，结果是一致的。&lt;code&gt;3&lt;/code&gt;个用户执行&lt;code&gt;线程组&lt;/code&gt;，各个用户的请求时间分别为&lt;code&gt;2024-04-15 16:12:37 CST&lt;/code&gt;、&lt;code&gt;2024-04-15 16:12:40 CST&lt;/code&gt;、&lt;code&gt;2024-04-15 16:12:43 CST&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;3&lt;/code&gt;个用户执行请求的间隔时间正好是&lt;code&gt;3&lt;/code&gt;秒，即&lt;code&gt;ramp-up时间/线程数&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part3same-user-on-each-iteration在每次迭代中使用相同的用户&#34;&gt;&lt;em&gt;Part3.same user on each iteration（在每次迭代中使用相同的用户）&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;没有研究出来它有什么用。经过我的测试，&lt;code&gt;same user on each iteration（在每次迭代中使用相同的用户）&lt;/code&gt;启用与否，作用是一样的。&lt;/p&gt;
&lt;p&gt;如读者对此有不同见解，欢迎与我联系，共同探讨。目前，我十分费解。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part4延迟创建线程直到需要&#34;&gt;&lt;em&gt;Part4.延迟创建线程直到需要&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;当在JMeter中启用&lt;code&gt;延迟创建线程直到需要&lt;/code&gt;时，JMeter会根据预设的&lt;code&gt;Ramp-up时间&lt;/code&gt;动态地分配线程。假设&lt;code&gt;Ramp-up时间&lt;/code&gt;设置为20秒，&lt;code&gt;线程数&lt;/code&gt;为10，那么JMeter会在测试启动后立即创建第一个线程并开始请求处理。随后，每隔2秒，JMeter将创建下一个线程，直到所有线程都被启动。&lt;/p&gt;
&lt;p&gt;如果关闭“延迟创建线程直到需要”选项，JMeter会在测试开始时一次性创建所有线程。使用同样的参数，即在测试一开始，JMeter会立即创建全部的10个线程。这些线程会按照设定的“Ramp-up时间”进行执行，每个线程将间隔2秒启动。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;延迟创建线程直到需要&lt;/code&gt;这一配置的目的是为了应对测试机性能有限的情况。通过这种方式，可以避免在测试初期就创建所有线程，导致资源过度占用和可能的性能问题。这种方法有助于平滑地增加系统负载，同时防止资源瞬间紧张导致测试无法正常进行。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part5调度器-启动延迟&#34;&gt;&lt;em&gt;Part5.调度器-启动延迟&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;调度器&lt;/code&gt;主要控制线程操作时间。启用&lt;code&gt;调度器&lt;/code&gt;后，可以输入&lt;code&gt;持续时间&lt;/code&gt;（值不能为空），&lt;code&gt;启动延迟&lt;/code&gt;来控制线程组的操作时间及线程组操作前的延迟时间。&lt;/p&gt;
&lt;p&gt;同时输入&lt;code&gt;持续时间&lt;/code&gt;，&lt;code&gt;启动延迟&lt;/code&gt;时，先计算&lt;code&gt;启动延迟&lt;/code&gt;，再计算&lt;code&gt;持续时间&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup5/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;启用&lt;code&gt;调度器&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;持续时间&lt;/code&gt;：10&lt;/p&gt;
&lt;p&gt;&lt;code&gt;启动延迟&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加1个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup5/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/9.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/10.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;注意看图中右上角-黄色三角形左边的&lt;code&gt;计时器&lt;/code&gt;，值固定在&lt;code&gt;2&lt;/code&gt;秒。这个计时器计算整个测试计划的持续时间。由于示例请求的接口响应较快，可以理解为计时器的时间就是&lt;code&gt;HTTP请求&lt;/code&gt;时的时间。&lt;/p&gt;
&lt;p&gt;因为&lt;code&gt;启动延迟&lt;/code&gt;设置为&lt;code&gt;3&lt;/code&gt;秒，所以&lt;code&gt;HTTP请求&lt;/code&gt;会在延迟&lt;code&gt;3&lt;/code&gt;秒执行。不过计时器的时间是&lt;code&gt;2&lt;/code&gt;秒，误差&lt;code&gt;1&lt;/code&gt;秒。我多次试过把&lt;code&gt;持续时间&lt;/code&gt;、&lt;code&gt;启动延迟&lt;/code&gt;的时间拉长，误差还是&lt;code&gt;1&lt;/code&gt;秒。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;part6调度器-持续时间&#34;&gt;&lt;em&gt;Part6.调度器-持续时间&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;持续时间&lt;/code&gt;用于控制线程组的执行时间。比如&lt;code&gt;持续时间&lt;/code&gt;设置为&lt;code&gt;100&lt;/code&gt;秒，就算&lt;code&gt;循环&lt;/code&gt;设置为&lt;code&gt;永远&lt;/code&gt;，执行&lt;code&gt;100&lt;/code&gt;秒后，线程组也会结束执行，不在发送新的请求。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup6/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;启用&lt;code&gt;调度器&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;持续时间&lt;/code&gt;：2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加1个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup6/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;&lt;/u&gt;下添加1个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;固定定时器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;3000&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/11.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/12.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中结果树中什么都没有，这是因为线程组的&lt;code&gt;持续时间&lt;/code&gt;只有&lt;code&gt;2&lt;/code&gt;秒，但&lt;code&gt;固定定时器&lt;/code&gt;的延迟有&lt;code&gt;3&lt;/code&gt;秒，导致还未执行&lt;code&gt;取样器&lt;/code&gt;，持续时间已经结束。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;此时删掉固定定时器，运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup2/13.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;此时有人会有疑问。接口中设置的&lt;code&gt;休眠时间&lt;/code&gt;就已经是&lt;code&gt;3&lt;/code&gt;秒了，脚本中的&lt;code&gt;持续时间&lt;/code&gt;还只是&lt;code&gt;2&lt;/code&gt;秒，为什么这次成功执行了呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;持续时间&lt;/code&gt;的设置，只作用与还未执行的取样器。已经执行的取样器，无论等待多长时间，都会执行完成。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;本文示例接口源代码可从前言中下载。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Jmeter-线程组上篇</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E7%BA%BF%E7%A8%8B%E7%BB%84%E4%B8%8A%E7%AF%87/</link>
        <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E7%BA%BF%E7%A8%8B%E7%BB%84%E4%B8%8A%E7%AF%87/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-线程组上篇" /&gt;&lt;h1 id=&#34;线程组&#34;&gt;线程组
&lt;/h1&gt;&lt;p&gt;线程组作为JMeter测试计划的核心组件之一，对于模拟并发用户的行为至关重要。线程组元件是整个测试计划的入口，所有的取样器和控制器必须放置在线程组下。&lt;/p&gt;
&lt;p&gt;可以将线程组视为一个虚拟用户池，其中每个线程可被理解为一个虚拟用户，多个虚拟用户同时执行相同的一批任务。&lt;/p&gt;
&lt;p&gt;在这个虚拟用户池中，每个线程之间是相互隔离且互不影响的。每个线程的执行过程中，操作的变量不会对其他线程的变量值产生影响。&lt;/p&gt;
&lt;p&gt;线程组的关键任务之一是定义并发用户的行为，包括设置线程数、循环次数、启动延迟等关键参数。通过适当配置线程组，测试人员可以模拟多用户在系统中同时执行任务的场景，从而评估系统的性能和稳定性。&lt;/p&gt;
&lt;p&gt;通过灵活使用setup线程组、线程组、tearDown线程组、开放模型线程组，配置前置操作、主要操作、后置操作，更能真实、详细的评估系统。&lt;/p&gt;
&lt;p&gt;线程组分为四类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;线程组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;setUp线程组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tearDown线程组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开放模型线程组&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线程组、setUp线程组、tearDown线程组控制面板中的元素基本一致：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;名称、注释&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在取样器错误后执行的动作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ramp-Up时间&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Same user on each iteration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;延迟创建线程直到需要（只有线程组有）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调度器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开放模型线程组控制面板中的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;名称、注释&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在取样器错误后执行的动作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调度计划&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;随机种子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;执行顺序&#34;&gt;执行顺序
&lt;/h2&gt;&lt;p&gt;在JMeter中，&lt;code&gt;setUp线程组&lt;/code&gt;拥有最高的优先级，而&lt;code&gt;tearDown线程组&lt;/code&gt;则具有最低的优先级。这一优先级关系可用表达式表示为：&lt;code&gt;setUp线程组 &amp;gt; 线程组 = 开放模型线程组 &amp;gt; tearDown线程组&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这意味着在测试计划执行过程中，&lt;code&gt;setUp线程组&lt;/code&gt;将首先执行，其后是&lt;code&gt;线程组&lt;/code&gt;和&lt;code&gt;开放模型线程组&lt;/code&gt;，最后执行&lt;code&gt;tearDown线程组&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;通常情况下，&lt;code&gt;setUp线程组&lt;/code&gt;用于在测试执行之前进行一些初始化工作，而&lt;code&gt;tearDown线程组&lt;/code&gt;用于测试执行结束后的清理工作。
其他线程组在测试执行过程中按照它们在测试计划中的顺序执行。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 接口设置了休眠三秒，即接口在接收到请求数据三秒后，返回响应数据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;我是响应&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，分别添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;tearDown线程组、线程组、setUp线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;tearDown线程组、线程组、setUp线程组&lt;/u&gt;下分别添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称分别为：&lt;code&gt;tearDown线程组&lt;/code&gt;、&lt;code&gt;线程组&lt;/code&gt;、&lt;code&gt;setUp线程组&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/1.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/2.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;可以观察到在&lt;code&gt;2024-04-03 15:00:07&lt;/code&gt; 时，&lt;code&gt;setUp线程组&lt;/code&gt;中的取样器发送了请求。&lt;/p&gt;
&lt;p&gt;随后，在 &lt;code&gt;2024-04-03 15:00:10&lt;/code&gt; 时，&lt;code&gt;线程组&lt;/code&gt;中的请求取样器也发出了请求。&lt;/p&gt;
&lt;p&gt;最后，在 &lt;code&gt;2024-04-03 15:00:13&lt;/code&gt;时，&lt;code&gt;tearDown线程组请求取样器&lt;/code&gt;发出了请求。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器&lt;/code&gt;的请求时间间隔与接口设置的休眠时间一致，表明 JMeter 先执行&lt;code&gt;setUp线程组&lt;/code&gt;，随后执行&lt;code&gt;线程组&lt;/code&gt;，最后执行 &lt;code&gt;tearDown线程组&lt;/code&gt; 。即使脚本中的顺序不是这样。&lt;/p&gt;
&lt;p&gt;Jmeter中线程组的执行顺序可以归纳为：&lt;code&gt;setUp线程组&lt;/code&gt; &amp;gt; &lt;code&gt;线程组&lt;/code&gt; = &lt;code&gt;开放模型线程组&lt;/code&gt; &amp;gt; &lt;code&gt;tearDown线程组&lt;/code&gt;。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;线程数&#34;&gt;线程数
&lt;/h2&gt;&lt;p&gt;线程组中的&lt;code&gt;线程数&lt;/code&gt;指的是同时运行的虚拟用户数量。这个数量决定了你的测试将模拟多少个用户同时访问目标应用程序或服务。&lt;/p&gt;
&lt;p&gt;在JMeter的线程组配置中，你可以根据你的需求来设置&lt;code&gt;线程数&lt;/code&gt;，通常是根据你想要模拟的用户负载量和你的系统资源来决定的。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;我是响应&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下，添加1个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;线程数：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP请求取样器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/3.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/4.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中取样器结果中的Thread Name分别为&lt;code&gt;线程组 1-1&lt;/code&gt;、&lt;code&gt;线程组 1-2&lt;/code&gt;、&lt;code&gt;线程组 1-3&lt;/code&gt;。这是因为&lt;code&gt;线程组&lt;/code&gt;中&lt;code&gt;线程数&lt;/code&gt;值为&lt;code&gt;3&lt;/code&gt;，Jmeter启功了3个线程，每个线程皆执行1次&lt;code&gt;线程组&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在Jmeter中1个线程就代表1个用户，现在就相当于3个用户一起执行&lt;code&gt;线程组&lt;/code&gt;。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;循环次数&#34;&gt;循环次数
&lt;/h2&gt;&lt;p&gt;在JMeter中，循环次数是指每个线程（即虚拟用户）执行其测试计划的次数。这个数量决定了你的测试将模拟用户访问目标应用程序或服务的次数。&lt;/p&gt;
&lt;p&gt;在JMeter的线程组配置中，你可以根据你的需求来设置循环次数，通常是根据你想要模拟的用户访问上限值，如抽奖次数。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;我是响应&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下，添加1个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;循环次数：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP请求取样器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/5.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/6.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中取样器结果中的Thread Name皆为&lt;code&gt;线程组 1-1&lt;/code&gt;。这是因为&lt;code&gt;线程组&lt;/code&gt;中&lt;code&gt;循环次数&lt;/code&gt;值为&lt;code&gt;3&lt;/code&gt;，Jmeter启功了1个线程，连续执行了3次&lt;code&gt;线程组&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在Jmeter中1个线程就代表1个用户，现在就相当于1个用户执行了3次&lt;code&gt;线程组&lt;/code&gt;。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;取样器错误后执行的动作&#34;&gt;取样器错误后执行的动作
&lt;/h2&gt;&lt;p&gt;在JMeter中，取样器（Sampler）是用于模拟用户请求发送到目标服务器的组件，例如HTTP请求、FTP请求等。当取样器执行过程中出现错误时，可以通过配置相应的动作来处理这些错误。以下是一些处理取样器错误时，线程组中常见方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;停止测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;任何一个取样器在执行过程中遇到错误时，整个测试计划将会在所有当前正在执行的线程执行完毕后停止。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;立即停止测试&lt;/strong&gt;
任何一个取样器在执行过程中遇到错误时，JMeter会立即停止当前运行的测试，不再执行任何后续的请求或操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过合理配置这些错误处理方式，可以根据测试需求和场景来控制测试计划的行为，确保对错误有适当的响应和处理。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;停止测试-单线程组单线程&#34;&gt;停止测试-单线程组&amp;amp;单线程
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup3/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回错误代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回正确代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下依次添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求&lt;/code&gt;（在前）、&lt;code&gt;正确请求&lt;/code&gt;（在后）&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;错误请求&lt;/code&gt;的请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;正确请求&lt;/code&gt;的请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/7.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/8.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续请求了三次，结果是一致的。&lt;/p&gt;
&lt;p&gt;取样器在线程组中一般是从上至下顺序执行。&lt;code&gt;错误请求&lt;/code&gt;的结果报错后，因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;停止测试&lt;/code&gt;，同时没有其他正在执行的线程，Jmeter直接结束本次测试。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;删除响应断言，再次运行&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/9.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续请求了三次，结果是一致的。因为&lt;code&gt;错误请求&lt;/code&gt;的结果没有报错，会继续执行&lt;code&gt;正确请求&lt;/code&gt;。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;停止测试-单线程组多线程&#34;&gt;停止测试-单线程组&amp;amp;多线程
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup3/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回错误代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回正确代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止测试&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;线程数&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下依次添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求-${yonghu}&lt;/code&gt;（在前）、&lt;code&gt;正确请求-${yonghu}&lt;/code&gt;（在后）&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;错误请求&lt;/code&gt;的请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;正确请求&lt;/code&gt;的请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;CSV 数据文件设置&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件名&lt;/code&gt;：&lt;code&gt;ceshi.txt的路径&lt;/code&gt;&lt;/p&gt;
  &lt;p&gt;&amp;emsp;&lt;code&gt;ceshi.txt文件内容：&lt;/code&gt;（复制后，手动删除前面的空格）&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;500,用户1&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;1111,用户2&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;500,用户3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件编码&lt;/code&gt;：&lt;code&gt;UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;变量名称&lt;/code&gt;：&lt;code&gt;ceshi,yonghu&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;${ceshi}$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/10.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/11.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续请求了三次，结果是一致的。&lt;/p&gt;
&lt;p&gt;可以看到每次执行都是执行完&lt;code&gt;用户1&lt;/code&gt;的线程后，因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;停止测试&lt;/code&gt;，执行&lt;code&gt;用户2-错误请求&lt;/code&gt;时发生错误，同时没有其他正在执行的线程，Jmeter直接结束本次测试。&lt;/p&gt;
&lt;p&gt;从这次测试中还可以看出，不仅线程组下的取样器有执行顺序，多线程也有执行顺序，即&lt;code&gt;用户1&amp;gt;用户2&amp;gt;用户3&lt;/code&gt;。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;停止测试-单线程组多循环&#34;&gt;停止测试-单线程组&amp;amp;多循环
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup3/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回错误代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回正确代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止测试&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;循环次数&lt;/code&gt;：&lt;code&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下依次添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求-${xunhuan}&lt;/code&gt;（在前）、&lt;code&gt;正确请求-${xunhuan}&lt;/code&gt;（在后）&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;错误请求&lt;/code&gt;的请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;正确请求&lt;/code&gt;的请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;CSV 数据文件设置&lt;/u&gt;（右键-添加-配置元件）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件名&lt;/code&gt;：&lt;code&gt;ceshi.txt的路径&lt;/code&gt;&lt;/p&gt;
  &lt;p&gt;&amp;emsp;&lt;code&gt;ceshi.txt文件内容：&lt;/code&gt;（复制后，手动删除前面的空格）&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;500,第1次循环&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;1111,第2次循环&lt;/code&gt;&lt;br&gt;
  &amp;emsp;&amp;emsp;&lt;code&gt;500,第3次循环&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;文件编码&lt;/code&gt;：&lt;code&gt;UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;变量名称&lt;/code&gt;：&lt;code&gt;ceshi,xunhuan&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;${ceshi}$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/12.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/13.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续请求了三次，结果是一致的。&lt;/p&gt;
&lt;p&gt;可以看到每次执行都是执行完第1次循环后，因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;停止测试&lt;/code&gt;，执行第2循环时的&lt;code&gt;错误请求-第2次循环&lt;/code&gt;时发生错误，同时没有其他正在执行的线程，Jmeter直接结束本次测试。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;停止测试-多线程组勾选独立运行每个线程组&#34;&gt;停止测试-多线程组&amp;amp;勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup4/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回错误代码  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 确保 与错误并行请求 在 错误请求 后结束  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回正确代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;面板中勾选&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;独立运行每个线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组1&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组2&lt;/u&gt;下添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;与错误请求并行的请求&lt;/code&gt;、&lt;code&gt;错误请求之后的请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求之后的正确请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;固定定时器&lt;/u&gt;（右键取样器-添加-定时器）&lt;/p&gt;
&lt;p&gt;线程延迟：&lt;code&gt;3000&lt;/code&gt;	（确保 错误请求之后的正确请求 在 错误请求 后开始）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/14.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;固定定时器&lt;/code&gt;可以延迟取样器的执行时间，设置为&lt;code&gt;3&lt;/code&gt;秒，可以确保&lt;code&gt;错误请求之后的请求&lt;/code&gt;在&lt;code&gt;错误请求&lt;/code&gt;结束后执行。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/15.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续运行了多次。会发现，哎！怎么会有不一样的情况。我经过多次测试，发现在勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;&amp;amp;有多个线程组时，此时勾选&lt;code&gt;停止测试&lt;/code&gt;，并不会按照预期进行。&lt;/p&gt;
&lt;p&gt;预期结果应该是，错误请求之后，Jemter直接结束测试计划，并不会执行线程组2。读者在使用时需要注意这种情况。具体原理咱们在这里就不深究了，欢迎任何有见解的读者联系我，我会贴在此段下面。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;停止测试-多线程组不勾选独立运行每个线程组&#34;&gt;停止测试-多线程组&amp;amp;不勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup4/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回错误代码  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 确保 与错误并行请求 在 错误请求 后结束  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回正确代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;面板中不勾选&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;独立运行每个线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组1&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组2&lt;/u&gt;下添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;与错误请求并行的请求&lt;/code&gt;、&lt;code&gt;错误请求之后的请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求之后的正确请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;固定定时器&lt;/u&gt;（右键取样器-添加-定时器）&lt;/p&gt;
&lt;p&gt;线程延迟：&lt;code&gt;3000&lt;/code&gt;	（确保 错误请求之后的正确请求 在 错误请求 后开始）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/16.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/17.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续运行了多次。每次结果都一致，执行了&lt;code&gt;错误请求&lt;/code&gt;、&lt;code&gt;与错误请求并行的请求&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;此时&lt;code&gt;线程组1&lt;/code&gt;和&lt;code&gt;线程组2&lt;/code&gt;是并发的，同时执行。所以在执行&lt;code&gt;错误请求&lt;/code&gt;时，也在执行&lt;code&gt;与错误请求并行的请求&lt;/code&gt;。另外&lt;code&gt;错误请求之后的请求&lt;/code&gt;因固定定时器的延迟，还未执行。&lt;/p&gt;
&lt;p&gt;因为设置&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;为&lt;code&gt;停止测试&lt;/code&gt;，虽然执行&lt;code&gt;错误请求&lt;/code&gt;时发生错误，但因此时还在执行&lt;code&gt;与错误请求并行的请求&lt;/code&gt;，Jemter会等待&lt;code&gt;与错误请求并行的请求&lt;/code&gt;执行结束后，在结束测试计划。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;立即停止测试-多线程组不勾选独立运行每个线程组&#34;&gt;立即停止测试-多线程组&amp;amp;不勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;*
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;构想设计的&lt;code&gt;立即停止测试-单线程组&amp;amp;单线程、立即停止测试-单线程组&amp;amp;多线程、立即停止测试-单线程组&amp;amp;多循环&lt;/code&gt;；因不涉及多个取样器并行的情况，结果是与&lt;code&gt;停止测试&lt;/code&gt;是一致的。读者可以修改&lt;code&gt;停止测试&lt;/code&gt;为&lt;code&gt;立即停止测试&lt;/code&gt;进行尝试，此处不在赘述。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;构想设计的&lt;code&gt;立即停止测试-多线程组&amp;amp;勾选独立运行每个线程组&lt;/code&gt;、与&lt;code&gt;停止测试-多线程组&amp;amp;勾选独立运行每个线程组&lt;/code&gt;的结果是一致的。读者可以修改&lt;code&gt;停止测试&lt;/code&gt;为&lt;code&gt;立即停止测试&lt;/code&gt;进行尝试，此处不在赘述。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@ThreadGroup.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/ThreadGroup4/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;threadgroup4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;500&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回错误代码  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 确保 与错误并行请求 在 错误请求 后结束  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;200&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 返回正确代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;面板中不勾选&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;独立运行每个线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;取样器错误后执行的动作&lt;/code&gt;中勾选&lt;code&gt;立即停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组1&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;错误请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组2&lt;/u&gt;下添加2个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP 请求&lt;/u&gt;取样器&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;与错误请求并行的请求&lt;/code&gt;、&lt;code&gt;错误请求之后的请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/ThreadGroup4/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;错误请求之后的正确请求&lt;/u&gt;取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;固定定时器&lt;/u&gt;（右键取样器-添加-定时器）&lt;/p&gt;
&lt;p&gt;线程延迟：&lt;code&gt;3000&lt;/code&gt;	（确保 错误请求之后的正确请求 在 错误请求 后开始）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;中，添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/18.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/ThreadGroup1/19.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;图中连续请求了三次。结果是一致的，执行了&lt;code&gt;错误请求&lt;/code&gt;、&lt;code&gt;与错误请求并行的请求&lt;/code&gt;；但&lt;code&gt;错误请求&lt;/code&gt;是一个完整的过程，成功接受到响应数据；&lt;code&gt;与错误请求并行的请求&lt;/code&gt;则不然，在图中可以看到响应数据中有报错信息（Socket 关闭异常）。&lt;/p&gt;
&lt;p&gt;这是因设置为&lt;code&gt;立即停止测试&lt;/code&gt;，在&lt;code&gt;错误请求&lt;/code&gt;发生错误时，Jmeter立即停止测试计划，不会等待&lt;code&gt;与错误请求并行的请求&lt;/code&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;本文示例接口源代码可从前言中下载。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;hr&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Jmeter-测试计划</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/</link>
        <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-测试计划" /&gt;&lt;h1 id=&#34;测试计划&#34;&gt;&lt;em&gt;测试计划&lt;/em&gt;
&lt;/h1&gt;&lt;p&gt;可以将测试计划可视化为用于运行测试的JMeter脚本。测试计划由测试元素组成，例如线程组，逻辑控制器，样本生成控制器，监听器，定时器，断言和配置元素。 每个测试计划中至少应有一个线程组。 我们可以根据要求添加或删除元素。 前言中的快速开始就是一个测试计划。&lt;/p&gt;
&lt;p&gt;当你执行测试时，添加的所有所需组件和元件组成了一个有机整体，即一个完整的测试计划。这个测试计划反映了你对系统性能和功能的验证方式以及测试场景的设计。&lt;/p&gt;
&lt;p&gt;测试计划控制面板中的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;名称和注释&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;用户定义的变量&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;独立运行每个线程组&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;函数测试模式&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;添加目录或jar包到classpath&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;用户定义的变量&#34;&gt;&lt;em&gt;用户定义的变量&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;当在测试计划的多个部分中存在重复的数值时，可以通过&lt;code&gt;用户定义的变量&lt;/code&gt;来提供更灵活的设置。&lt;/p&gt;
&lt;p&gt;测试计划控制面板中的&lt;code&gt;用户定义的变量&lt;/code&gt;的作用域覆盖整个测试计划。&lt;/p&gt;
&lt;p&gt;你可以通过&lt;code&gt;${变量名称}&lt;/code&gt;的方式来引用这些变量。这种方式允许你在不同的请求或操作中使用相同的数值，从而更加方便地维护和修改。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@TestPlan.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/TestPlan1/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;嘿！伙计，你的请求方式错了呀！&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Variables&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;嘿！伙计，你的请求参数错了呀！&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;本次请求的用户定义的变量值是：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Variables&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;面板中添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;用户定义的变量&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;Variables&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;值随意输入：&lt;code&gt;比如：姜&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/TestPlan1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;消息体数据:&lt;code&gt;{&amp;quot;Variables&amp;quot;:&amp;quot;${Variables}&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP请求&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP信息头管理器&lt;/u&gt;（右键HTTP请求-添加-配置元件-HTTP信息头管理器，添加信息头，指定请求体类型）&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;Content-Type&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;application/json&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/0.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/1.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;请求体中的数据为：&lt;u style=&#34;color: #a77730&#34;&gt;{&amp;ldquo;Variables&amp;rdquo;:&amp;ldquo;姜&amp;rdquo;}&lt;/u&gt;。说明成功调用可测试计划中用户定义的变量。&lt;/p&gt;
&lt;p&gt;此外，JMeter提供的配置元件中也包含&lt;code&gt;用户定义的变量&lt;/code&gt;元件，通过&lt;code&gt;测试计划/线程组/取样器-添加-配置元件-用户定义的变量&lt;/code&gt;进行添加。用法与测试计划面板中的&lt;code&gt;用户定义的变量&lt;/code&gt;一致，不同之处在于作用域。&lt;/p&gt;
&lt;p&gt;举例来说，在测试计划下添加的&lt;code&gt;用户定义的变量&lt;/code&gt;将在整个测试计划中生效，与测试计划面板中的&lt;code&gt;用户定义的变量&lt;/code&gt;作用范围一致。然而，如果&lt;code&gt;用户定义的变量&lt;/code&gt;位于取样器中，其作用范围将仅限于该特定取样器内。这种灵活性允许在不同配置元件中使用变量，使其作用范围更具体而有针对性。&lt;/p&gt;
&lt;p&gt;建议使用更自由的配置元件中的&lt;code&gt;用户定义的变量&lt;/code&gt; 。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;不勾选独立运行每个线程组&#34;&gt;&lt;em&gt;不勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;不勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;，&lt;code&gt;测试计划&lt;/code&gt;下各&lt;code&gt;线程组&lt;/code&gt;随机并行执行。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@TestPlan.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/TestPlan2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 接口设置了休眠三秒，即接口在接收到请求数据三秒后，返回响应数据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;响应时间：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加两个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划面板&lt;/u&gt;中不勾选&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;独立运行每个线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;两个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下皆添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;取样器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称与对应线程组一致：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/TestPlan2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/2.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/3.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;取样器结果中的Sample Start 是请求发出的时间。可以观察到两个线程组内的 HTTP 请求在同一时刻发出，即 &lt;code&gt;2024-04-03 11:27:43&lt;/code&gt;。因为两个线程组是并发、随机执行的。&lt;/p&gt;
&lt;p&gt;此外需要多说一下。未勾选 &lt;code&gt;独立运行每个线程组&lt;/code&gt;时，线程组是并发执行。但线程组中的多个取样器并不会并发，而是在较短时间内发出全部请求，尤其是在取样器数量较多的情况下。&lt;/p&gt;
&lt;p&gt;因此，在模拟高并发时，如果需要多线程组、所有取样器请求并发，建议在测试计划中添加&lt;code&gt;同步定时器（Synchronizing Timer）&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;同步定时器（Synchronizing Timer）&lt;/code&gt;可以确保在并发场景下的同一时间点触发多个线程组中多个取样器的请求，以更真实地模拟多用户同时访问系统的情况。&lt;/p&gt;
&lt;h2 id=&#34;勾选独立运行每个线程组&#34;&gt;&lt;em&gt;勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;，&lt;code&gt;测试计划&lt;/code&gt;下各&lt;code&gt;线程组&lt;/code&gt;按照从上到下的顺序依次执行。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@TestPlan.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/TestPlan2/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 接口设置了休眠三秒，即接口在接收到请求数据三秒后，返回响应数据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;响应时间：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加两个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划面板&lt;/u&gt;中勾选&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;独立运行每个线程组&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;两个&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下皆添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;取样器&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称与对应线程组一致：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/TestPlan2/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/4.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;取样器结果中的Sample Start 是请求发出的时间。可以观察到两个线程组内的 HTTP 请求并非在同一时刻发出，线程组2的请求发出时间是 &lt;code&gt;2024-04-03 11:29:28&lt;/code&gt;，线程组1的请求发出时间是 &lt;code&gt;2024-04-03 11:29:31&lt;/code&gt;。两者之间的时间差为3秒，正与接口休眠的三秒相符，这表明两个线程组是顺序执行的。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;不勾选主线程结束后运行teardown线程组&#34;&gt;&lt;em&gt;不勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;在 JMeter 中，&lt;code&gt;线程组&lt;/code&gt;的执行优先级大于&lt;code&gt;tearDown 线程组&lt;/code&gt;，因此&lt;code&gt;tearDown 线程组&lt;/code&gt;将会等待所有&lt;code&gt;线程组&lt;/code&gt;执行完毕后才会执行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;线程组&lt;/code&gt;中的&lt;code&gt;取样器&lt;/code&gt;配置为&lt;code&gt;在取样器错误发生后要执行的动作&lt;/code&gt;为&lt;code&gt;停止测试&lt;/code&gt;或&lt;code&gt;立即停止测试&lt;/code&gt;时，如果&lt;code&gt;线程组&lt;/code&gt;中的&lt;code&gt;取样器&lt;/code&gt;发生错误，&lt;code&gt;tearDown线程组&lt;/code&gt;就无法执行。&lt;/p&gt;
&lt;p&gt;如果你对这个场景有需要，可以勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;。它的作用是即使普通线程由于取样器错误而导致线程结束执行时，Jmeter也会继续执行 tearDown 线程。&lt;/p&gt;
&lt;p&gt;这意味着即使在测试中发生了错误，系统仍会在整个测试结束前执行 tearDown 线程，以确保在测试运行结束时执行一些清理或必要的操作。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@TestPlan.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/TestPlan3/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;、&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;tearDown线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;在取样器错误后要执行的动作&lt;/code&gt;的选项勾选&lt;code&gt;停止测试&lt;/code&gt;或&lt;code&gt;立即停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;和&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;tearDown线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;http请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组&lt;/code&gt;，&lt;code&gt;tearDown线程组&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/TestPlan3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;请求取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;（右键取样器-添加-断言-响应断言）&lt;/p&gt;
&lt;p&gt;添加、输入值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/5.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;响应断言用于匹配实际响应信息，作为验证接口响应的一种手段。例如，示例接口响应的是 &lt;code&gt;{&#39;code&#39;: 200}&lt;/code&gt;，而添加的断言是 &lt;code&gt;1111&lt;/code&gt;，这两者无法匹配，即判断该取样器请求存在错误。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/6.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;因为响应体&lt;code&gt;{&amp;quot;code&amp;quot;: 200}&lt;/code&gt;与断言&lt;code&gt;1111&lt;/code&gt;无法匹配，响应断言判断该取样器请求发生错误。未勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;时，不会执行 tearDown 线程组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;此时，修改响应断言为：&lt;code&gt;{&amp;quot;code&amp;quot;:200&lt;/code&gt;，运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/7.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;这次因为响应体&lt;code&gt;{&amp;quot;code&amp;quot;: 200}&lt;/code&gt;与断言&lt;code&gt;{&amp;quot;code&amp;quot;:200&lt;/code&gt;匹配，响应断言判断该取样器请求正常，所以线程组被执行完毕后，执行 tearDown 线程组。&lt;/p&gt;
&lt;h2 id=&#34;勾选主线程结束后运行teardown线程组&#34;&gt;&lt;em&gt;勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@TestPlan.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/TestPlan3/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;、&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;tearDown线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;在取样器错误后要执行的动作&lt;/code&gt;的选项勾选&lt;code&gt;停止测试&lt;/code&gt;或&lt;code&gt;立即停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;和&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;tearDown线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;http请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;线程组&lt;/code&gt;，&lt;code&gt;tearDown线程组&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/TestPlan3/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;请求取样器下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;响应断言&lt;/u&gt;（右键取样器-添加-断言-响应断言）&lt;/p&gt;
&lt;p&gt;添加、输入值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/5.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/TestPlan/8.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;即使响应断言判断请求发生错误，因为了勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;，tearDown 线程组也会被执行。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;函数测试模式&#34;&gt;&lt;em&gt;函数测试模式&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;若选择了此选项，并且监听组件（比如“查看结果树”）配置了将结果保存到文件中，JMeter将每次的请求结果记录到文件中。值得注意的是，这种做法相对消耗资源，在负载测试中并不建议勾选。然而，在平时脚本调试的情况下，可以考虑启用该选项。&lt;/p&gt;
&lt;p&gt;这样的设置主要适用于需要详细记录每次请求结果的情况，以便后续分析或排查问题。在负载测试中，由于可能生成大量的结果数据，将其全部保存到文件可能导致性能和资源开销的增加，因此需要谨慎使用。&lt;/p&gt;
&lt;p&gt;实际应用场景相对有限，因此在本文中不进行详细演示。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;添加目录或jar包到classpath&#34;&gt;&lt;em&gt;添加目录或jar包到classpath&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;添加文件或 JAR 包功能主要用于调用外部的 JAR 包。当脚本需要引用外部的 Java 文件或 JAR 包时，可以通过将 JAR 包的路径添加到此功能中。这样，在 Beanshell 脚本中就可以通过 import 语句导入外部 JAR 包，并直接调用其中的方法。&lt;/p&gt;
&lt;p&gt;这个特性提供了一种扩展 JMeter 功能的途径，使得用户可以方便地集成和调用外部 Java 类库，从而实现更复杂和灵活的测试脚本。&lt;/p&gt;
&lt;p&gt;在后续的内容中，当涉及到 Beanshell 时，将详细阐述如何使用这一功能。&lt;/p&gt;
&lt;div&gt;&lt;hr&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Jmeter-环境配置</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-环境配置" /&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h1 id=&#34;jmeter-环境安装及配置&#34;&gt;JMeter 环境安装及配置
&lt;/h1&gt;&lt;p&gt;在使用 JMeter 之前，需要配置相应的环境，包括安装JDK和JMeter。&lt;/p&gt;
&lt;p&gt;首先，了解一下JDK，它就是Java的开发工具包。&lt;/p&gt;
&lt;p&gt;JMeter 是使用 Java 编写的。一般来说，只需要安装 JRE（Java 运行时环境）就可以运行 JMeter，因为 JRE 包含了运行 Java 应用程序所需的组件。那么为什么建议安装 JDK 呢？&lt;/p&gt;
&lt;p&gt;如果你想要在 JMeter 中使用一些插件、进行脚本开发、编译测试计划等高级功能，安装 JDK 可能会更有帮助，因为 JDK 包含了 JRE，并且还提供了编译 Java 代码所需的工具，比如 javac。此外，一些场景下，比如进行 HTTPS 压力测试，需要使用 JDK 中的 keytool 工具。&lt;/p&gt;
&lt;p&gt;确保正确配置JDK和JMeter环境，可以让你更灵活地应对不同的测试需求&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;jdk&#34;&gt;&lt;em&gt;JDK&lt;/em&gt;
&lt;/h2&gt;&lt;h3 id=&#34;下载jdk&#34;&gt;&lt;em&gt;下载JDK&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;注意一定要下载与Jmeter对应的JDK版本，如jmeter-5.6.3与JDK21对应&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://www.oracle.com/java/technologies/downloads/#jdk21-windows&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://www.oracle.com/java/technologies/downloads/#jdk21-windows&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;JDK下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;示例环境为Windows，读者应根据实际环境下载JDK的安装包。推荐下载exe文件，安装方便快捷。&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://www.oracle.com/java/technologies/downloads/#jdk21-windows&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fwww.oracle.com%2fjava%2ftechnologies%2fdownloads%2f%23jdk21-windows&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/1.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;安装jdk&#34;&gt;&lt;em&gt;安装JDK&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;建议在安装之前在&lt;code&gt;D盘或C盘&lt;/code&gt;下新建一个下新建一个&lt;code&gt;Tools\JDK&lt;/code&gt; 文件夹。在安装 JDK 时，修改安装目录为&lt;code&gt;Tools\JDK&lt;/code&gt;文件夹。这样做的好处在于方便管理和配置环境变量。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/2.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/3.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;接下来就是一直下一步就行。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;配置jdk系统变量环境变量&#34;&gt;&lt;em&gt;配置JDK系统变量、环境变量&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;系统变量和环境变量是计算机系统中的两个重要概念，它们用于存储和管理系统或应用程序运行过程中需要使用的信息。&lt;/p&gt;
&lt;p&gt;系统变量是指在操作系统级别上设置的一些全局信息，用于控制和影响整个计算机系统的行为。
这些变量通常由操作系统或系统管理员配置，用于存储系统范围的配置参数和信息。系统变量可以影响所有用户和应用程序的行为。
如&lt;code&gt;PATH&lt;/code&gt;是一个常见的系统变量，它存储了操作系统在哪些目录中查找可执行文件的信息。&lt;/p&gt;
&lt;p&gt;环境变量是在操作系统或应用程序运行过程中设置的一些动态变量，用于影响当前进程的行为。
环境变量提供了一种将信息传递给正在运行的程序的方法，以便程序根据这些变量的值来调整其行为。
如&lt;code&gt;PATH&lt;/code&gt;变量中的值就是执行文件的环境变量。&lt;/p&gt;
&lt;p&gt;系统变量是操作系统级别的全局配置，而环境变量是在运行过程中用于传递信息给正在执行的程序的配置。在许多情况下，环境变量的值可以由用户或程序员进行配置，以影响特定应用程序或进程的行为。&lt;/p&gt;
&lt;div&gt;  




&lt;div style=&#34;display: inline-grid; grid-template-columns: 7% 93%; padding: 15px; background-color: #f8f8f8; border: 1px solid #ccc; border-radius: 10px; margin-bottom: 0; width: 99%;&#34;&gt;
    &lt;div style=&#34;display: flex; align-items: center; justify-content: center;&#34;&gt;
        &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon icon-tabler icon-tabler-alert-square-rounded&#34; width=&#34;44&#34; height=&#34;44&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;1.5&#34; stroke=&#34;#ff2825&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
            &lt;path stroke=&#34;none&#34; d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;
            &lt;path d=&#34;M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z&#34; /&gt;
            &lt;path d=&#34;M12 8v4&#34; /&gt;
            &lt;path d=&#34;M12 16h.01&#34; /&gt;
        &lt;/svg&gt;
    &lt;/div&gt;

    &lt;div style=&#34;display: flex; align-items: center; justify-content: flex-start; margin-left: 15px; font-size: 1.5rem; width: 100%; height: 100%;&#34;&gt;
不要随意改动环境变量，否则可能造成系统死机。
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;新建JDK系统变量&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;右键此电脑-属性-高级系统设置-环境变量，系统变量-新建。&lt;/p&gt;
&lt;p&gt;变量名：&lt;code&gt;JDK&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;变量值：&lt;code&gt;JDK安装目录(进入JDK目录，复制文件地址栏中的值)&lt;/code&gt;或者浏览目录进行选择（Windows11）&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/13.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/4.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Path中新建JDK的环境环境&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;系统变量中找到Path，选中后点击编辑，进入Path系统变量窗口，新建两条环境变量。然后一路确定。&lt;/p&gt;
&lt;p&gt;第一条：&lt;code&gt;%JDK%\bin;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第二条：&lt;code&gt;%JDK%\jre\bin;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/5.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;jmeter&#34;&gt;&lt;em&gt;Jmeter&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;JMeter 是一个独立的 Java 应用程序，它不依赖于系统注册表或其他系统级配置。所以它能够在不同操作系统上运行而无需进行安装。只需要下载完成后，将 ZIP 文件解压缩到指定的目录。
在解压缩后的目录中找到 JMeter 启动脚本（例如 windows的jmeter.bat 或 Linux的jmeter.sh），运行该脚本以启动 JMeter。&lt;/p&gt;
&lt;h3 id=&#34;下载jmeterzip包&#34;&gt;&lt;em&gt;下载JmeterZIP包&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;注意一定要下载与JDK对应的Jmeter版本，如jmeter-5.6.3与JDK21对应&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://archive.apache.org/dist/jmeter/binaries/&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://archive.apache.org/dist/jmeter/binaries/&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;历史版本Jmeter下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;示例环境为Windows，读者应根据实际系统环境及JDK版本，下载Jmeter的安装包。下载页面写有JDK版本要求。Windows环境推荐zip包，Linux环境推荐tgz包。&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://archive.apache.org/dist/jmeter/binaries/&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2farchive.apache.org%2fdist%2fjmeter%2fbinaries%2f&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/6.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://jmeter.apache.org/download_jmeter.cgi&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://jmeter.apache.org/download_jmeter.cgi&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;最新版本Jmeter下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;示例环境为Windows，读者应根据实际系统环境及JDK版本，下载Jmeter的安装包。下载页面写有JDK版本要求。Windows环境推荐zip包，Linux环境推荐tgz包。&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://jmeter.apache.org/download_jmeter.cgi&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fjmeter.apache.org%2fdownload_jmeter.cgi&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/7.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;解压到目录&#34;&gt;&lt;em&gt;解压到目录&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;建议解压到D:\Tools目录下，方便管理。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/8.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;汉化jmeter界面&#34;&gt;&lt;em&gt;汉化Jmeter界面&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;编辑Jmeter/bin/jmeter.properties，40行增加&lt;code&gt;language=zh_CN&lt;/code&gt;，然后保存。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/9.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;发送启动文件到桌面快捷方式&#34;&gt;&lt;em&gt;发送启动文件到桌面快捷方式&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/10.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;启动jmeter&#34;&gt;&lt;em&gt;启动Jmeter&lt;/em&gt;
&lt;/h3&gt;&lt;p&gt;双击桌面上的 JMeter 快捷方式，等待脚本运行，然后 JMeter 界面将会显示出来。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/11.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;快速使用&#34;&gt;&lt;em&gt;快速使用&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;我们可以使用最简单的JMeter脚本来快速进行一次接口请求。这个脚本包括测试计划、线程组、取样器（Sampler）以及查看结果器（View Results Tree）。&lt;/p&gt;
&lt;p&gt;在测试计划中，我们定义了整个测试的基本设置。线程组用于模拟用户，而取样器则代表了具体的请求。查看结果器则用于查看请求的详细结果。&lt;/p&gt;
&lt;p&gt;通过这个简单的脚本，我们能够迅速进行一次接口请求测试。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例接口&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@QuickUse.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/QuickUse/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;quickuse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Jmeter教程快速开始api&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请求方式非 GET&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请求方式为 GET&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;示例Jmeter脚本&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;右键测试计划-添加-线程（用户）-线程组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;测试计划&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;查看结果树&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;右键测试计划-添加-监听器-查看结果树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;线程组&lt;/u&gt;下添加&lt;u style=&#34;text-decoration-color: #f4970b;&#34;&gt;HTTP请求&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;右键线程组-添加-取样器-HTTP请求&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/api/QuickUse/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/12.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/EnvConfig/1.gif&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;从图中可以清晰的看出，请求成功。请求数据中，包括&lt;code&gt;Request Headers 请求头&lt;/code&gt;和&lt;code&gt;Request Body 请求体&lt;/code&gt;。响应数据中，包括&lt;code&gt;Response Headers 响应头&lt;/code&gt;和&lt;code&gt;Response Body 响应体&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;此次请求的响应体数据为： &lt;u style=&#34;color: #a77730&#34;&gt;请求方式为 GET&lt;/u&gt;&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;hr&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Jmeter-前言</title>
        <link>https://www.jzy-blogs.cn/p/jmeter-%E5%89%8D%E8%A8%80/</link>
        <pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.jzy-blogs.cn/p/jmeter-%E5%89%8D%E8%A8%80/</guid>
        <description>&lt;img src="https://www.jzy-blogs.cn/img/Jmeter/0.png" alt="Featured image of post Jmeter-前言" /&gt;&lt;h1 id=&#34;前言&#34;&gt;&lt;em&gt;前言&lt;/em&gt;
&lt;/h1&gt;&lt;h2 id=&#34;为什么要撰写这样一个教程呢&#34;&gt;&lt;em&gt;为什么要撰写这样一个教程呢？&lt;/em&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;深入学习Jmeter&lt;/p&gt;
&lt;p&gt;温故而知新。尽管我已经使用JMeter很长时间，但还有许多元件我并不十分了解，因此，编写教程的过程成为了我的学习过程，通过反复回顾和整理知识，我能够更全面地掌握JMeter。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分享知识&lt;/p&gt;
&lt;p&gt;我深信知识具有强大力量，而这种力量应该共享，我愿意将我的所学分享给志同道合的朋友——也就是你们。它不仅能够为他人提供帮助，姜振园还能够在这个过程中体验到一种内在的满足感。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结识朋友&lt;/p&gt;
&lt;p&gt;这是我的第一个教程，后续也会编辑更多的教程。希望能通过这一行为与各位取得交流，成为朋友，与大家一起讨论更多的事情。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;关于jmeter&#34;&gt;&lt;em&gt;关于Jmeter&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;JMeter是Apache组织开发的基于Java的压力测试工具。用于对软件做压力测试，它最初被设计用于Web应用测试，但后来扩展到其他测试领域。 它可以用于测试静态和动态资源，例如静态文件、Java 小服务程序、CGI 脚本、Java 对象、数据库、FTP 服务器， 等等。&lt;/p&gt;
&lt;p&gt;JMeter 可以用于对服务器、网络或对象模拟巨大的负载，来自不同压力类别下测试它们的强度和分析整体性能。&lt;/p&gt;
&lt;p&gt;另外，JMeter能够对应用程序做功能/回归测试，通过创建带有断言的脚本来验证你的程序返回了你期望的结果。为了最大限度的灵活性，JMeter允许使用正则表达式创建断言。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;我们为什么使用jmeter&#34;&gt;&lt;em&gt;我们为什么使用Jmeter&lt;/em&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开源免费，基于Java编写，可集成到其他系统可拓展各个功能插件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持接口测试，压力测试等多种功能，支持录制回放，入门简单&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相较于自己编写框架活其他开源工具，有较为完善的UI界面，便于接口调试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多平台支持，可在Linux，Windows，Mac上运行selenium 是一套完整的web应用程序测试系统，包含了测试的录制（selenium IDE）,编写及运行（Selenium Remote Control）和测试的并行处理（Selenium Grid）。Selenium的核心Selenium Core基于JsUnit，完全由JavaScript编写，因此可以用于任何支持JavaScript的浏览器上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;主要组件介绍&#34;&gt;&lt;em&gt;主要组件介绍&lt;/em&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划(Test Plan)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;是使用JMeter进行测试的起点，它是其它JMeter测试元件的容器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组(Thread Group)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;代表一定数量的并发用户，它可以用来模拟并发用户发送请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;取样器(sampler)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;定义实际的请求内容，被线程组包含，我们主要用HTTP请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;监听器(Listener)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;负责收集测试结果，同时也被告知了结果显示的方式。我们常用的包括：聚合报告、察看结果树、用表格查看结果，都支持将结果数据写入文件。其他的添加上去看看就行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;逻辑控制器(Logic Controller)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;可以自定义JMeter发送请求的行为逻辑，它与Sampler结合使用可以模拟复杂的请求序列。&lt;/p&gt;
&lt;p&gt;其分为循环控制器和事务控制器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;断言(Assertions)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;可以用来判断请求响应的结果是否如用户所期望的。它可以用来隔离问题域，即在确保功能正确的前提下执行压力测试。这个限制对于有效的测试是非常有用的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;配置元件(Config Element)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;维护Sampler需要的配置信息，并根据实际的需要会修改请求的内容。我们主要在参数化中用到CSV Data Set Config。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;前置处理器(Pre Processors)和后置处理器(Post Processors)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;负责在生成请求之前和之后完成工作。前置处理器常常用来修改请求的设置，后置处理器则常常用来处理响应的数据。我们主要在动态关联中用到后置处理器的正则表达式提取器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;定时器(Timer)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;负责定义请求之间的延迟间隔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;执行顺序(Execution sequence)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;配置元件、前置处理器、定时器、取样器、后置处理器、断言、监听器&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;工作流程&#34;&gt;&lt;em&gt;工作流程&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;JMeter通过模拟一组用户将请求发送到目标服务器。 随后，收集数据以通过各种格式计算目标服务器的统计和显示性能度量。&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;bigImg&#34;&gt;
  &lt;img src=&#34;https://www.jzy-blogs.cn/img/Jmeter/Preface/0.png&#34;
       
       
       
       loading=&#34;lazy&#34;
       
       
  &gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;内容引用&#34;&gt;&lt;em&gt;内容引用&lt;/em&gt;
&lt;/h2&gt;&lt;div&gt;
&lt;a1 href=&#34;https://www.emqx.com/zh/blog/introduction-to-jmeter-test-components#%E4%B8%80-%E7%BA%BF%E7%A8%8B%E7%BB%84&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://www.emqx.com/zh/blog/introduction-to-jmeter-test-components#%E4%B8%80-%E7%BA%BF%E7%A8%8B%E7%BB%84&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;Jmeter测试组件介绍|EMQ&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;本系列教程中部分组件介绍文本引用于此&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://www.emqx.com/zh/blog/introduction-to-jmeter-test-components#%E4%B8%80-%E7%BA%BF%E7%A8%8B%E7%BB%84&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fwww.emqx.com%2fzh%2fblog%2fintroduction-to-jmeter-test-components%23%25E4%25B8%2580-%25E7%25BA%25BF%25E7%25A8%258B%25E7%25BB%2584&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://www.niaoge.com/jmeter/jmeter-index.html&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://www.niaoge.com/jmeter/jmeter-index.html&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;鸟哥教程&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;本系列教程中部分组件介绍文本引用于此&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://www.niaoge.com/jmeter/jmeter-index.html&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fwww.niaoge.com%2fjmeter%2fjmeter-index.html&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;示例接口代码&#34;&gt;&lt;em&gt;示例接口代码&lt;/em&gt;
&lt;/h2&gt;&lt;div&gt;
&lt;a1 href=&#34;https://www.jzy-blogs.cn/code/JmeterApi.zip&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://www.jzy-blogs.cn/code/JmeterApi.zip&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;下载示例代码&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;本系列文章中所有示例接口皆由python编写，python版本为3.12.1，如要使用示例接口请安装python3.12.1与pycharm。压缩包内包含源码和使用说明&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://www.jzy-blogs.cn/code/JmeterApi.zip&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;&lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://www.jzy-blogs.cn/img/Jmeter/0.png&#34; alt=&#34;&#34; /&gt; &lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;h2 id=&#34;说明&#34;&gt;&lt;em&gt;说明&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;对于测试人员来说，JMeter是一款非常强大的接口测试工具，尤其在性能测试方面表现出色。希望读者们通过姜振园编写的系列教程，能够熟练掌握JMeter的使用。&lt;/p&gt;
&lt;p&gt;本文基于JDK21、Jmeter-5.6.3测试编写，可能不适用于历史版本及未来版本。如果Jmeter在后续的新版本中有所变化，或者文中有错漏的地方，请联系姜振园，姜振园感激不尽。&lt;/p&gt;
&lt;p&gt;对姜振园来说，能够帮助到读者是一件莫大的荣幸，期待更多读者通过本系列教程获得成长。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;hr&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
